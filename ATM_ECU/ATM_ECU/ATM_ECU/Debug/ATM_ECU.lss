
ATM_ECU.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001454  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000014e  00800060  00001454  000014e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000b  008001ae  008001ae  00001636  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001636  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001668  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000210  00000000  00000000  000016a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002a0d  00000000  00000000  000018b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ccd  00000000  00000000  000042c1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000016eb  00000000  00000000  00004f8e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000410  00000000  00000000  0000667c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b9e  00000000  00000000  00006a8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000f62  00000000  00000000  0000762a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000180  00000000  00000000  0000858c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 e5       	ldi	r30, 0x54	; 84
      68:	f4 e1       	ldi	r31, 0x14	; 20
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	ae 3a       	cpi	r26, 0xAE	; 174
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	21 e0       	ldi	r18, 0x01	; 1
      78:	ae ea       	ldi	r26, 0xAE	; 174
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a9 3b       	cpi	r26, 0xB9	; 185
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <main>
      8a:	0c 94 28 0a 	jmp	0x1450	; 0x1450 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <APP_init>:
uint16_t u16_g_amount = 0 ; /** AMOUNT NEEDED BY USER **/

/** INITIALIZATION FUNCTION **/
void APP_init()
{
	Button_init(BUTTON2_PORT , BUTTON2_PIN); /** START TRIGGER FROM CARD ECU **/
      92:	60 e0       	ldi	r22, 0x00	; 0
      94:	80 e0       	ldi	r24, 0x00	; 0
      96:	0e 94 00 03 	call	0x600	; 0x600 <Button_init>
	
	BUZZ_init(); /** ALARM INITIALIZATION **/
      9a:	0e 94 23 03 	call	0x646	; 0x646 <BUZZ_init>
	BUZZ_off();  /** ALARM IS OFF **/
      9e:	0e 94 2f 03 	call	0x65e	; 0x65e <BUZZ_off>
	
	DIO_setpindir(DIO_PORTB , DIO_PIN0 , DIO_PIN_OUTPUT); /** TRIGGER PIN TO START COMMUNICATION **/
      a2:	41 e0       	ldi	r20, 0x01	; 1
      a4:	60 e0       	ldi	r22, 0x00	; 0
      a6:	81 e0       	ldi	r24, 0x01	; 1
      a8:	0e 94 ee 05 	call	0xbdc	; 0xbdc <DIO_setpindir>
	DIO_setpinvalue(DIO_PORTB , DIO_PIN0 , DIO_PIN_LOW);  /** INITIAL VALUE IS ZERO **/
      ac:	40 e0       	ldi	r20, 0x00	; 0
      ae:	60 e0       	ldi	r22, 0x00	; 0
      b0:	81 e0       	ldi	r24, 0x01	; 1
      b2:	0e 94 6d 06 	call	0xcda	; 0xcda <DIO_setpinvalue>
	
	TMR0_init(); /** TIMER 0 INITIALIZATION **/
      b6:	0e 94 a0 07 	call	0xf40	; 0xf40 <TMR0_init>
	
	SPI_initslave(); /** INITIALIZE SPI MASTER **/
      ba:	0e 94 64 07 	call	0xec8	; 0xec8 <SPI_initslave>
	
	KEYPAD_init(); /** INITIALIZE THE KEYPAD **/
      be:	0e 94 35 03 	call	0x66a	; 0x66a <KEYPAD_init>
	
	LCD_init();  /** INITIALIZE LCD **/
      c2:	0e 94 88 04 	call	0x910	; 0x910 <LCD_init>
	TMR0_delayms(MS_DELAY_20); /** SET DELAY FOR LCD INITILIZATION **/
      c6:	64 e1       	ldi	r22, 0x14	; 20
      c8:	70 e0       	ldi	r23, 0x00	; 0
      ca:	80 e0       	ldi	r24, 0x00	; 0
      cc:	90 e0       	ldi	r25, 0x00	; 0
      ce:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>
	
	LCD_writecustomchar(u8_g_bell , bell); /** STORE THE BELL SHAPE IN CGRAM OF LCD **/
      d2:	60 e0       	ldi	r22, 0x00	; 0
      d4:	82 e6       	ldi	r24, 0x62	; 98
      d6:	90 e0       	ldi	r25, 0x00	; 0
      d8:	0e 94 3b 05 	call	0xa76	; 0xa76 <LCD_writecustomchar>
	
	LCD_writestr(" WELCOME TO ATM !"); /** DISPLAY WELCOME MESSAGE FOR 1 SEC **/
      dc:	83 ed       	ldi	r24, 0xD3	; 211
      de:	90 e0       	ldi	r25, 0x00	; 0
      e0:	0e 94 10 05 	call	0xa20	; 0xa20 <LCD_writestr>
	TMR0_delayms(MS_DELAY_500);
      e4:	64 ef       	ldi	r22, 0xF4	; 244
      e6:	71 e0       	ldi	r23, 0x01	; 1
      e8:	80 e0       	ldi	r24, 0x00	; 0
      ea:	90 e0       	ldi	r25, 0x00	; 0
      ec:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>
	
	LCD_sendcmd(LCD_CLEAR);
      f0:	81 e0       	ldi	r24, 0x01	; 1
      f2:	0e 94 3f 04 	call	0x87e	; 0x87e <LCD_sendcmd>
	TMR0_delayms(MS_DELAY_20);
      f6:	64 e1       	ldi	r22, 0x14	; 20
      f8:	70 e0       	ldi	r23, 0x00	; 0
      fa:	80 e0       	ldi	r24, 0x00	; 0
      fc:	90 e0       	ldi	r25, 0x00	; 0
      fe:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>
	
	LCD_goto(LCD_POS_0 , LCD_POS_1);
     102:	61 e0       	ldi	r22, 0x01	; 1
     104:	80 e0       	ldi	r24, 0x00	; 0
     106:	0e 94 23 05 	call	0xa46	; 0xa46 <LCD_goto>
	LCD_writestr("Insert A Card"); /** ASK USER TO INSERT HIS CARD **/
     10a:	85 ee       	ldi	r24, 0xE5	; 229
     10c:	90 e0       	ldi	r25, 0x00	; 0
     10e:	0e 94 10 05 	call	0xa20	; 0xa20 <LCD_writestr>
	
	do  /** WAIT FOR THE CARD ECU TRIGGER **/
	{
		Is_pressed(BUTTON2_PORT , BUTTON2_PIN , &triggerstatus);
     112:	40 eb       	ldi	r20, 0xB0	; 176
     114:	51 e0       	ldi	r21, 0x01	; 1
     116:	60 e0       	ldi	r22, 0x00	; 0
     118:	80 e0       	ldi	r24, 0x00	; 0
     11a:	0e 94 04 03 	call	0x608	; 0x608 <Is_pressed>
	} while (triggerstatus == FALSE);
     11e:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <triggerstatus>
     122:	88 23       	and	r24, r24
     124:	b1 f3       	breq	.-20     	; 0x112 <APP_init+0x80>
	
	/** WAIT UNTILL TRIGGER ACTION FROM THE CARD ECU **/
	LCD_sendcmd(LCD_CLEAR); /** CLEAR THE LCD **/
     126:	81 e0       	ldi	r24, 0x01	; 1
     128:	0e 94 3f 04 	call	0x87e	; 0x87e <LCD_sendcmd>
	TMR0_delayms(MS_DELAY_20);
     12c:	64 e1       	ldi	r22, 0x14	; 20
     12e:	70 e0       	ldi	r23, 0x00	; 0
     130:	80 e0       	ldi	r24, 0x00	; 0
     132:	90 e0       	ldi	r25, 0x00	; 0
     134:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>
     138:	08 95       	ret

0000013a <APP_readuserpin>:
}

/** FUNCTION TO READ USER PIN **/
void APP_readuserpin()
{
	LCD_sendcmd(LCD_CLEAR); /** CLEAR THE LCD **/
     13a:	81 e0       	ldi	r24, 0x01	; 1
     13c:	0e 94 3f 04 	call	0x87e	; 0x87e <LCD_sendcmd>
	TMR0_delayms(MS_DELAY_20);
     140:	64 e1       	ldi	r22, 0x14	; 20
     142:	70 e0       	ldi	r23, 0x00	; 0
     144:	80 e0       	ldi	r24, 0x00	; 0
     146:	90 e0       	ldi	r25, 0x00	; 0
     148:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>
	
	LCD_goto(LCD_POS_0 , LCD_POS_0);
     14c:	60 e0       	ldi	r22, 0x00	; 0
     14e:	80 e0       	ldi	r24, 0x00	; 0
     150:	0e 94 23 05 	call	0xa46	; 0xa46 <LCD_goto>
	LCD_writestr("Enter Your PIN"); /** SAK USER TO INSERT CARD PIN **/
     154:	83 ef       	ldi	r24, 0xF3	; 243
     156:	90 e0       	ldi	r25, 0x00	; 0
     158:	0e 94 10 05 	call	0xa20	; 0xa20 <LCD_writestr>
	
	for(counter = FIRST_PIN_DIGIT ; counter < LAST_PIN_DIGIT ; counter++)
     15c:	10 92 b8 01 	sts	0x01B8, r1	; 0x8001b8 <counter>
     160:	25 c0       	rjmp	.+74     	; 0x1ac <APP_readuserpin+0x72>
	{
		while ((KEYPAD_read(&u8_a_pressednum) == KEYPAD_readFail)); /** POLLING UNTILL NUMBER PRESSED **/
     162:	83 eb       	ldi	r24, 0xB3	; 179
     164:	91 e0       	ldi	r25, 0x01	; 1
     166:	0e 94 7d 03 	call	0x6fa	; 0x6fa <KEYPAD_read>
     16a:	81 30       	cpi	r24, 0x01	; 1
     16c:	d1 f3       	breq	.-12     	; 0x162 <APP_readuserpin+0x28>
		
		LCD_goto(LCD_POS_1 , counter+LAST_PIN_DIGIT); /** DISPLAY * WITH EACH PRESSED NUMBER **/
     16e:	60 91 b8 01 	lds	r22, 0x01B8	; 0x8001b8 <counter>
     172:	6c 5f       	subi	r22, 0xFC	; 252
     174:	81 e0       	ldi	r24, 0x01	; 1
     176:	0e 94 23 05 	call	0xa46	; 0xa46 <LCD_goto>
		LCD_writechar('*');
     17a:	8a e2       	ldi	r24, 0x2A	; 42
     17c:	0e 94 c9 04 	call	0x992	; 0x992 <LCD_writechar>
		
		u8_g_userpin[counter] = u8_a_pressednum ; /** STORE THE PRESSED NUMBER **/
     180:	e0 91 b8 01 	lds	r30, 0x01B8	; 0x8001b8 <counter>
     184:	f0 e0       	ldi	r31, 0x00	; 0
     186:	e6 59       	subi	r30, 0x96	; 150
     188:	ff 4f       	sbci	r31, 0xFF	; 255
     18a:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <u8_a_pressednum>
     18e:	80 83       	st	Z, r24
		TMR0_delayms(MS_DELAY_200);
     190:	68 ec       	ldi	r22, 0xC8	; 200
     192:	70 e0       	ldi	r23, 0x00	; 0
     194:	80 e0       	ldi	r24, 0x00	; 0
     196:	90 e0       	ldi	r25, 0x00	; 0
     198:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>
		
		u8_returnstatus = KEYPAD_readFail; /** REINITIALIZE STATE TO ACCEPT NEW NUMBER **/
     19c:	81 e0       	ldi	r24, 0x01	; 1
     19e:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <u8_returnstatus>
	TMR0_delayms(MS_DELAY_20);
	
	LCD_goto(LCD_POS_0 , LCD_POS_0);
	LCD_writestr("Enter Your PIN"); /** SAK USER TO INSERT CARD PIN **/
	
	for(counter = FIRST_PIN_DIGIT ; counter < LAST_PIN_DIGIT ; counter++)
     1a2:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <counter>
     1a6:	8f 5f       	subi	r24, 0xFF	; 255
     1a8:	80 93 b8 01 	sts	0x01B8, r24	; 0x8001b8 <counter>
     1ac:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <counter>
     1b0:	84 30       	cpi	r24, 0x04	; 4
     1b2:	b8 f2       	brcs	.-82     	; 0x162 <APP_readuserpin+0x28>
		u8_returnstatus = KEYPAD_readFail; /** REINITIALIZE STATE TO ACCEPT NEW NUMBER **/
	}
	
	do /** LONG PRESS FOR 2 SECONDS ON ZERO **/
	{
		KEYPAD_read(&status);          /** READ THE ZERO FROM KEYPAD **/
     1b4:	82 eb       	ldi	r24, 0xB2	; 178
     1b6:	91 e0       	ldi	r25, 0x01	; 1
     1b8:	0e 94 7d 03 	call	0x6fa	; 0x6fa <KEYPAD_read>
		TMR0_delayms(MS_DELAY_940);    /** DELAY FOR 2000 SECONDS    **/
     1bc:	6c ea       	ldi	r22, 0xAC	; 172
     1be:	73 e0       	ldi	r23, 0x03	; 3
     1c0:	80 e0       	ldi	r24, 0x00	; 0
     1c2:	90 e0       	ldi	r25, 0x00	; 0
     1c4:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>
		KEYPAD_read(&status);          /** READ THE ZERO FROM KEYPAD **/
     1c8:	82 eb       	ldi	r24, 0xB2	; 178
     1ca:	91 e0       	ldi	r25, 0x01	; 1
     1cc:	0e 94 7d 03 	call	0x6fa	; 0x6fa <KEYPAD_read>
		
	} while (status != ZERO_CHAR);
     1d0:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <status>
     1d4:	80 33       	cpi	r24, 0x30	; 48
     1d6:	71 f7       	brne	.-36     	; 0x1b4 <APP_readuserpin+0x7a>
	
}
     1d8:	08 95       	ret

000001da <APP_startcardcomm>:

/** FUNCTION TO COMMUNICATE WITH CARD ECU TO GET PIN/PAN **/
void APP_startcardcomm()
{
	/** INITIATE COMMUNICATION BETWEEN THE CARD ECU VIA TRIGGER ACTION **/
	DIO_setpinvalue(DIO_PORTB , DIO_PIN0 , DIO_PIN_HIGH);
     1da:	41 e0       	ldi	r20, 0x01	; 1
     1dc:	60 e0       	ldi	r22, 0x00	; 0
     1de:	81 e0       	ldi	r24, 0x01	; 1
     1e0:	0e 94 6d 06 	call	0xcda	; 0xcda <DIO_setpinvalue>
	
	TMR0_delayms(MS_DELAY_30);
     1e4:	6e e1       	ldi	r22, 0x1E	; 30
     1e6:	70 e0       	ldi	r23, 0x00	; 0
     1e8:	80 e0       	ldi	r24, 0x00	; 0
     1ea:	90 e0       	ldi	r25, 0x00	; 0
     1ec:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>
	
	SPI_receivestring(&u8_g_cardpin); /** RECEIVE THE PIN **/
     1f0:	83 e8       	ldi	r24, 0x83	; 131
     1f2:	90 e0       	ldi	r25, 0x00	; 0
     1f4:	0e 94 8b 07 	call	0xf16	; 0xf16 <SPI_receivestring>
	TMR0_delayms(MS_DELAY_30);
     1f8:	6e e1       	ldi	r22, 0x1E	; 30
     1fa:	70 e0       	ldi	r23, 0x00	; 0
     1fc:	80 e0       	ldi	r24, 0x00	; 0
     1fe:	90 e0       	ldi	r25, 0x00	; 0
     200:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>

	SPI_receivestring(&u8_g_cardpan); /** RECEIVE THE PAN **/
     204:	8f e6       	ldi	r24, 0x6F	; 111
     206:	90 e0       	ldi	r25, 0x00	; 0
     208:	0e 94 8b 07 	call	0xf16	; 0xf16 <SPI_receivestring>
	
	/** VERIFY THE USER INSERTED PIN **/
	u8_a_pinnotmatched = 1 ;
     20c:	81 e0       	ldi	r24, 0x01	; 1
     20e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
	while (u8_a_pintry <= MAX_TRY && u8_a_pinnotmatched != FALSE  ) /** CHECK PIN MATCHING FOR TWO TIMES **/
     212:	4d c0       	rjmp	.+154    	; 0x2ae <APP_startcardcomm+0xd4>
	{
		u8_a_pinnotmatched = strcmp(u8_g_cardpin , u8_g_userpin); /** COMPARE THE TWO PINs **/
     214:	6a e6       	ldi	r22, 0x6A	; 106
     216:	70 e0       	ldi	r23, 0x00	; 0
     218:	83 e8       	ldi	r24, 0x83	; 131
     21a:	90 e0       	ldi	r25, 0x00	; 0
     21c:	0e 94 1f 0a 	call	0x143e	; 0x143e <strcmp>
     220:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
		
		if (u8_a_pinnotmatched == FALSE) /** PIN MATCHED **/
     224:	88 23       	and	r24, r24
     226:	09 f4       	brne	.+2      	; 0x22a <APP_startcardcomm+0x50>
     228:	4a c0       	rjmp	.+148    	; 0x2be <APP_startcardcomm+0xe4>
			break ;
		}
		
		else /** PIN NOT MATCHED **/
		{
			LCD_sendcmd(LCD_CLEAR); /** CLEAR THE LCD **/
     22a:	81 e0       	ldi	r24, 0x01	; 1
     22c:	0e 94 3f 04 	call	0x87e	; 0x87e <LCD_sendcmd>
			TMR0_delayms(MS_DELAY_20);
     230:	64 e1       	ldi	r22, 0x14	; 20
     232:	70 e0       	ldi	r23, 0x00	; 0
     234:	80 e0       	ldi	r24, 0x00	; 0
     236:	90 e0       	ldi	r25, 0x00	; 0
     238:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>
			
			LCD_goto(LCD_POS_0,LCD_POS_0);
     23c:	60 e0       	ldi	r22, 0x00	; 0
     23e:	80 e0       	ldi	r24, 0x00	; 0
     240:	0e 94 23 05 	call	0xa46	; 0xa46 <LCD_goto>
			LCD_writestr("PIN NOT MATCHED !"); /** DISPLAY MESSAGE FOR 1 SEC **/
     244:	82 e0       	ldi	r24, 0x02	; 2
     246:	91 e0       	ldi	r25, 0x01	; 1
     248:	0e 94 10 05 	call	0xa20	; 0xa20 <LCD_writestr>
			TMR0_delayms(MS_DELAY_500);
     24c:	64 ef       	ldi	r22, 0xF4	; 244
     24e:	71 e0       	ldi	r23, 0x01	; 1
     250:	80 e0       	ldi	r24, 0x00	; 0
     252:	90 e0       	ldi	r25, 0x00	; 0
     254:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>
			
			LCD_sendcmd(LCD_CLEAR); /** CLEAR THE LCD **/
     258:	81 e0       	ldi	r24, 0x01	; 1
     25a:	0e 94 3f 04 	call	0x87e	; 0x87e <LCD_sendcmd>
			TMR0_delayms(MS_DELAY_20);
     25e:	64 e1       	ldi	r22, 0x14	; 20
     260:	70 e0       	ldi	r23, 0x00	; 0
     262:	80 e0       	ldi	r24, 0x00	; 0
     264:	90 e0       	ldi	r25, 0x00	; 0
     266:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>
			
			u8_a_pintry++ ; /** TRY FOR MORE ATTEMPT **/ /** 0 , 1 , 2 **/
     26a:	80 91 b1 01 	lds	r24, 0x01B1	; 0x8001b1 <u8_a_pintry>
     26e:	8f 5f       	subi	r24, 0xFF	; 255
     270:	80 93 b1 01 	sts	0x01B1, r24	; 0x8001b1 <u8_a_pintry>
			
			if (u8_a_pintry > MAX_TRY) /** WHEN THIRD TRY IS WRONG **/
     274:	83 30       	cpi	r24, 0x03	; 3
     276:	c8 f0       	brcs	.+50     	; 0x2aa <APP_startcardcomm+0xd0>
			{
				while (TRUE)
				{
					LCD_goto(LCD_POS_0,LCD_POS_0);
     278:	60 e0       	ldi	r22, 0x00	; 0
     27a:	80 e0       	ldi	r24, 0x00	; 0
     27c:	0e 94 23 05 	call	0xa46	; 0xa46 <LCD_goto>
					LCD_writestr("PIN NOT MATCHED !"); /** DISPLAY MESSAGE **/
     280:	82 e0       	ldi	r24, 0x02	; 2
     282:	91 e0       	ldi	r25, 0x01	; 1
     284:	0e 94 10 05 	call	0xa20	; 0xa20 <LCD_writestr>
					
					BUZZ_on();
     288:	0e 94 29 03 	call	0x652	; 0x652 <BUZZ_on>
					TMR0_delayms(MS_DELAY_500);
     28c:	64 ef       	ldi	r22, 0xF4	; 244
     28e:	71 e0       	ldi	r23, 0x01	; 1
     290:	80 e0       	ldi	r24, 0x00	; 0
     292:	90 e0       	ldi	r25, 0x00	; 0
     294:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>
					
					BUZZ_off();
     298:	0e 94 2f 03 	call	0x65e	; 0x65e <BUZZ_off>
					TMR0_delayms(MS_DELAY_500);
     29c:	64 ef       	ldi	r22, 0xF4	; 244
     29e:	71 e0       	ldi	r23, 0x01	; 1
     2a0:	80 e0       	ldi	r24, 0x00	; 0
     2a2:	90 e0       	ldi	r25, 0x00	; 0
     2a4:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>
     2a8:	e7 cf       	rjmp	.-50     	; 0x278 <APP_startcardcomm+0x9e>
				}
			}
			
			APP_readuserpin(); /** READ THE PIN AGAIN **/ 
     2aa:	0e 94 9d 00 	call	0x13a	; 0x13a <APP_readuserpin>

	SPI_receivestring(&u8_g_cardpan); /** RECEIVE THE PAN **/
	
	/** VERIFY THE USER INSERTED PIN **/
	u8_a_pinnotmatched = 1 ;
	while (u8_a_pintry <= MAX_TRY && u8_a_pinnotmatched != FALSE  ) /** CHECK PIN MATCHING FOR TWO TIMES **/
     2ae:	80 91 b1 01 	lds	r24, 0x01B1	; 0x8001b1 <u8_a_pintry>
     2b2:	83 30       	cpi	r24, 0x03	; 3
     2b4:	20 f4       	brcc	.+8      	; 0x2be <APP_startcardcomm+0xe4>
     2b6:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     2ba:	81 11       	cpse	r24, r1
     2bc:	ab cf       	rjmp	.-170    	; 0x214 <APP_startcardcomm+0x3a>
     2be:	08 95       	ret

000002c0 <APP_getamount>:
}


/** FUNCTION TO GET THE AMOUNT OF MONEY NEEDED **/
void APP_getamount()
{
     2c0:	0f 93       	push	r16
     2c2:	1f 93       	push	r17
     2c4:	cf 93       	push	r28
     2c6:	df 93       	push	r29
	uint16_t u16_l_amout = 0 , u8_a_pos = 1000 ;
	
	LCD_sendcmd(LCD_CLEAR); /** CLEAR THE LCD **/
     2c8:	81 e0       	ldi	r24, 0x01	; 1
     2ca:	0e 94 3f 04 	call	0x87e	; 0x87e <LCD_sendcmd>
	TMR0_delayms(MS_DELAY_20);
     2ce:	64 e1       	ldi	r22, 0x14	; 20
     2d0:	70 e0       	ldi	r23, 0x00	; 0
     2d2:	80 e0       	ldi	r24, 0x00	; 0
     2d4:	90 e0       	ldi	r25, 0x00	; 0
     2d6:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>
	
	LCD_writestr("ENTER THE AMOUNT"); /** ASK USER TO ENTER THE AMOUNT NEEDED **/
     2da:	84 e1       	ldi	r24, 0x14	; 20
     2dc:	91 e0       	ldi	r25, 0x01	; 1
     2de:	0e 94 10 05 	call	0xa20	; 0xa20 <LCD_writestr>
	TMR0_delayms(MS_DELAY_200);
     2e2:	68 ec       	ldi	r22, 0xC8	; 200
     2e4:	70 e0       	ldi	r23, 0x00	; 0
     2e6:	80 e0       	ldi	r24, 0x00	; 0
     2e8:	90 e0       	ldi	r25, 0x00	; 0
     2ea:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>
	
	LCD_goto(LCD_POS_1,LCD_POS_2);
     2ee:	62 e0       	ldi	r22, 0x02	; 2
     2f0:	81 e0       	ldi	r24, 0x01	; 1
     2f2:	0e 94 23 05 	call	0xa46	; 0xa46 <LCD_goto>

	for(counter = 0 ; counter <= AMOUNT_DIGITS ; counter++)
     2f6:	10 92 b8 01 	sts	0x01B8, r1	; 0x8001b8 <counter>


/** FUNCTION TO GET THE AMOUNT OF MONEY NEEDED **/
void APP_getamount()
{
	uint16_t u16_l_amout = 0 , u8_a_pos = 1000 ;
     2fa:	c8 ee       	ldi	r28, 0xE8	; 232
     2fc:	d3 e0       	ldi	r29, 0x03	; 3
     2fe:	00 e0       	ldi	r16, 0x00	; 0
     300:	10 e0       	ldi	r17, 0x00	; 0
	LCD_writestr("ENTER THE AMOUNT"); /** ASK USER TO ENTER THE AMOUNT NEEDED **/
	TMR0_delayms(MS_DELAY_200);
	
	LCD_goto(LCD_POS_1,LCD_POS_2);

	for(counter = 0 ; counter <= AMOUNT_DIGITS ; counter++)
     302:	45 c0       	rjmp	.+138    	; 0x38e <APP_getamount+0xce>
	{
		u8_a_pressednum = KEYPAD_readFail ;
     304:	91 e0       	ldi	r25, 0x01	; 1
     306:	90 93 b3 01 	sts	0x01B3, r25	; 0x8001b3 <u8_a_pressednum>
		
		if (counter == DECIMEL_POS)
     30a:	84 30       	cpi	r24, 0x04	; 4
     30c:	39 f4       	brne	.+14     	; 0x31c <APP_getamount+0x5c>
		{
			LCD_writechar(DECIMEL_DOT); /** DECIMEL POINT **/
     30e:	8e e2       	ldi	r24, 0x2E	; 46
     310:	0e 94 c9 04 	call	0x992	; 0x992 <LCD_writechar>
			u8_returnstatus = KEYPAD_readFail; /** REINITIALIZE STATE TO ACCEPT NEW NUMBER **/
     314:	81 e0       	ldi	r24, 0x01	; 1
     316:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <u8_returnstatus>
			continue ;
     31a:	34 c0       	rjmp	.+104    	; 0x384 <APP_getamount+0xc4>
		}
		
		while ((KEYPAD_read(&u8_a_pressednum) == KEYPAD_readFail)); /** POLLING UNTILL NUMBER PRESSED **/
     31c:	83 eb       	ldi	r24, 0xB3	; 179
     31e:	91 e0       	ldi	r25, 0x01	; 1
     320:	0e 94 7d 03 	call	0x6fa	; 0x6fa <KEYPAD_read>
     324:	81 30       	cpi	r24, 0x01	; 1
     326:	d1 f3       	breq	.-12     	; 0x31c <APP_getamount+0x5c>
		
		TMR0_delayms(MS_DELAY_200);
     328:	68 ec       	ldi	r22, 0xC8	; 200
     32a:	70 e0       	ldi	r23, 0x00	; 0
     32c:	80 e0       	ldi	r24, 0x00	; 0
     32e:	90 e0       	ldi	r25, 0x00	; 0
     330:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>
		LCD_writechar(u8_a_pressednum);
     334:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <u8_a_pressednum>
     338:	0e 94 c9 04 	call	0x992	; 0x992 <LCD_writechar>
		
		if (counter < DECIMEL_POS) 
     33c:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <counter>
     340:	84 30       	cpi	r24, 0x04	; 4
     342:	c8 f4       	brcc	.+50     	; 0x376 <APP_getamount+0xb6>
		{
			u16_l_amout += (u8_a_pressednum - CHAR_INT_DIFF) * u8_a_pos ; /** CHARACTER TO INTEGER **/
     344:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <u8_a_pressednum>
     348:	90 e0       	ldi	r25, 0x00	; 0
     34a:	c0 97       	sbiw	r24, 0x30	; 48
     34c:	8c 9f       	mul	r24, r28
     34e:	90 01       	movw	r18, r0
     350:	8d 9f       	mul	r24, r29
     352:	30 0d       	add	r19, r0
     354:	9c 9f       	mul	r25, r28
     356:	30 0d       	add	r19, r0
     358:	11 24       	eor	r1, r1
     35a:	02 0f       	add	r16, r18
     35c:	13 1f       	adc	r17, r19
			u8_a_pos /= DIGIT_DIVIDER ; /** GO TO THE NEXT POSITION **/
     35e:	9e 01       	movw	r18, r28
     360:	ad ec       	ldi	r26, 0xCD	; 205
     362:	bc ec       	ldi	r27, 0xCC	; 204
     364:	0e 94 ee 09 	call	0x13dc	; 0x13dc <__umulhisi3>
     368:	ec 01       	movw	r28, r24
     36a:	d6 95       	lsr	r29
     36c:	c7 95       	ror	r28
     36e:	d6 95       	lsr	r29
     370:	c7 95       	ror	r28
     372:	d6 95       	lsr	r29
     374:	c7 95       	ror	r28
		}
		
		u16_g_amount = u16_l_amout ; /** STORE THE NEEDED AMOUNT GLOBALLY **/
     376:	10 93 af 01 	sts	0x01AF, r17	; 0x8001af <__data_end+0x1>
     37a:	00 93 ae 01 	sts	0x01AE, r16	; 0x8001ae <__data_end>
		
		u8_returnstatus = KEYPAD_readFail; /** REINITIALIZE STATE TO ACCEPT NEW NUMBER **/
     37e:	81 e0       	ldi	r24, 0x01	; 1
     380:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <u8_returnstatus>
	LCD_writestr("ENTER THE AMOUNT"); /** ASK USER TO ENTER THE AMOUNT NEEDED **/
	TMR0_delayms(MS_DELAY_200);
	
	LCD_goto(LCD_POS_1,LCD_POS_2);

	for(counter = 0 ; counter <= AMOUNT_DIGITS ; counter++)
     384:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <counter>
     388:	8f 5f       	subi	r24, 0xFF	; 255
     38a:	80 93 b8 01 	sts	0x01B8, r24	; 0x8001b8 <counter>
     38e:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <counter>
     392:	87 30       	cpi	r24, 0x07	; 7
     394:	08 f4       	brcc	.+2      	; 0x398 <APP_getamount+0xd8>
     396:	b6 cf       	rjmp	.-148    	; 0x304 <APP_getamount+0x44>
		u16_g_amount = u16_l_amout ; /** STORE THE NEEDED AMOUNT GLOBALLY **/
		
		u8_returnstatus = KEYPAD_readFail; /** REINITIALIZE STATE TO ACCEPT NEW NUMBER **/
	}

}
     398:	df 91       	pop	r29
     39a:	cf 91       	pop	r28
     39c:	1f 91       	pop	r17
     39e:	0f 91       	pop	r16
     3a0:	08 95       	ret

000003a2 <APP_cardvalidate>:

/** FUNCTION TO VALIDATE THE CARD DATA **/
void APP_cardvalidate(void)
{
     3a2:	cf 92       	push	r12
     3a4:	df 92       	push	r13
     3a6:	ef 92       	push	r14
     3a8:	ff 92       	push	r15
     3aa:	cf 93       	push	r28
     3ac:	df 93       	push	r29
	uint8_t u8_l_cards = 0  , u8_l_panstate = 1 , u8_l_cardnum = 0; /** COUNTER FOR NUMBER OF CARDS **/
     3ae:	81 e0       	ldi	r24, 0x01	; 1
	
	for (u8_l_cards = 0 ; u8_l_cards < NUMBER_OF_CARDS ; u8_l_cards++)
     3b0:	c0 e0       	ldi	r28, 0x00	; 0
     3b2:	0d c0       	rjmp	.+26     	; 0x3ce <APP_cardvalidate+0x2c>
	{
		/** VALIDATING CARD PAN **/
		u8_l_panstate = strcmp(database[u8_l_cards].u8_a_card_pan , u8_g_cardpan);
     3b4:	29 e1       	ldi	r18, 0x19	; 25
     3b6:	c2 9f       	mul	r28, r18
     3b8:	c0 01       	movw	r24, r0
     3ba:	11 24       	eor	r1, r1
     3bc:	6f e6       	ldi	r22, 0x6F	; 111
     3be:	70 e0       	ldi	r23, 0x00	; 0
     3c0:	83 57       	subi	r24, 0x73	; 115
     3c2:	9f 4f       	sbci	r25, 0xFF	; 255
     3c4:	0e 94 1f 0a 	call	0x143e	; 0x143e <strcmp>
		
		if (!u8_l_panstate) /** PAN FOUND IN THE DATABASE **/
     3c8:	88 23       	and	r24, r24
     3ca:	21 f0       	breq	.+8      	; 0x3d4 <APP_cardvalidate+0x32>
/** FUNCTION TO VALIDATE THE CARD DATA **/
void APP_cardvalidate(void)
{
	uint8_t u8_l_cards = 0  , u8_l_panstate = 1 , u8_l_cardnum = 0; /** COUNTER FOR NUMBER OF CARDS **/
	
	for (u8_l_cards = 0 ; u8_l_cards < NUMBER_OF_CARDS ; u8_l_cards++)
     3cc:	cf 5f       	subi	r28, 0xFF	; 255
     3ce:	c3 30       	cpi	r28, 0x03	; 3
     3d0:	88 f3       	brcs	.-30     	; 0x3b4 <APP_cardvalidate+0x12>
}

/** FUNCTION TO VALIDATE THE CARD DATA **/
void APP_cardvalidate(void)
{
	uint8_t u8_l_cards = 0  , u8_l_panstate = 1 , u8_l_cardnum = 0; /** COUNTER FOR NUMBER OF CARDS **/
     3d2:	c0 e0       	ldi	r28, 0x00	; 0
			u8_l_cardnum = u8_l_cards ; /** GET THE CARD INDEX IN THE DATABASE **/ 
			break ; 
		}
	}
	
	if (!u8_l_panstate) /** CONTINUE ONLY IF THE CARD IS FOUND IN THE DATABASE **/
     3d4:	81 11       	cpse	r24, r1
     3d6:	eb c0       	rjmp	.+470    	; 0x5ae <__EEPROM_REGION_LENGTH__+0x1ae>
	{
		/** CHECK IF THE CARD RUNNING / BLOCKED **/
		if(database[u8_l_cardnum].en_a_cardstatus == BLOCKED)
     3d8:	d0 e0       	ldi	r29, 0x00	; 0
     3da:	89 e1       	ldi	r24, 0x19	; 25
     3dc:	8c 9f       	mul	r24, r28
     3de:	f0 01       	movw	r30, r0
     3e0:	8d 9f       	mul	r24, r29
     3e2:	f0 0d       	add	r31, r0
     3e4:	11 24       	eor	r1, r1
     3e6:	e8 57       	subi	r30, 0x78	; 120
     3e8:	ff 4f       	sbci	r31, 0xFF	; 255
     3ea:	84 81       	ldd	r24, Z+4	; 0x04
     3ec:	81 11       	cpse	r24, r1
     3ee:	14 c0       	rjmp	.+40     	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
		{
			BUZZ_on();  /** ALARM IS ON **/
     3f0:	0e 94 29 03 	call	0x652	; 0x652 <BUZZ_on>
			
			/** DISPLAY STATUS OVER THE LCD **/
			LCD_sendcmd(LCD_CLEAR);
     3f4:	81 e0       	ldi	r24, 0x01	; 1
     3f6:	0e 94 3f 04 	call	0x87e	; 0x87e <LCD_sendcmd>
			TMR0_delayms(MS_DELAY_20);
     3fa:	64 e1       	ldi	r22, 0x14	; 20
     3fc:	70 e0       	ldi	r23, 0x00	; 0
     3fe:	80 e0       	ldi	r24, 0x00	; 0
     400:	90 e0       	ldi	r25, 0x00	; 0
     402:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>
			
			LCD_goto(LCD_POS_0,LCD_POS_0);
     406:	60 e0       	ldi	r22, 0x00	; 0
     408:	80 e0       	ldi	r24, 0x00	; 0
     40a:	0e 94 23 05 	call	0xa46	; 0xa46 <LCD_goto>
			LCD_writestr("CARD IS STOLEN");
     40e:	85 e2       	ldi	r24, 0x25	; 37
     410:	91 e0       	ldi	r25, 0x01	; 1
     412:	0e 94 10 05 	call	0xa20	; 0xa20 <LCD_writestr>
     416:	ed c0       	rjmp	.+474    	; 0x5f2 <__EEPROM_REGION_LENGTH__+0x1f2>
		}
		
		/** CHECK IF NEEDED AMOUNT MORE THAN THE TRANSACTION AMOUNT **/
		else if (u16_g_amount > MAX_AMOUNT) /** MAX AMOUNT FOR EACH TRANSACTION IS 5000 **/
     418:	60 91 ae 01 	lds	r22, 0x01AE	; 0x8001ae <__data_end>
     41c:	70 91 af 01 	lds	r23, 0x01AF	; 0x8001af <__data_end+0x1>
     420:	69 38       	cpi	r22, 0x89	; 137
     422:	83 e1       	ldi	r24, 0x13	; 19
     424:	78 07       	cpc	r23, r24
     426:	00 f1       	brcs	.+64     	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
		{
			LCD_sendcmd(LCD_CLEAR);
     428:	81 e0       	ldi	r24, 0x01	; 1
     42a:	0e 94 3f 04 	call	0x87e	; 0x87e <LCD_sendcmd>
			TMR0_delayms(MS_DELAY_20);
     42e:	64 e1       	ldi	r22, 0x14	; 20
     430:	70 e0       	ldi	r23, 0x00	; 0
     432:	80 e0       	ldi	r24, 0x00	; 0
     434:	90 e0       	ldi	r25, 0x00	; 0
     436:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>
			
			LCD_goto(LCD_POS_0 , LCD_POS_0);
     43a:	60 e0       	ldi	r22, 0x00	; 0
     43c:	80 e0       	ldi	r24, 0x00	; 0
     43e:	0e 94 23 05 	call	0xa46	; 0xa46 <LCD_goto>
			LCD_writestr("MAX TRANSACTION ");
     442:	84 e3       	ldi	r24, 0x34	; 52
     444:	91 e0       	ldi	r25, 0x01	; 1
     446:	0e 94 10 05 	call	0xa20	; 0xa20 <LCD_writestr>
			
			LCD_goto(LCD_POS_1 , LCD_POS_0);
     44a:	60 e0       	ldi	r22, 0x00	; 0
     44c:	81 e0       	ldi	r24, 0x01	; 1
     44e:	0e 94 23 05 	call	0xa46	; 0xa46 <LCD_goto>
			LCD_writestr("AMOUNT EXCEEDED");
     452:	85 e4       	ldi	r24, 0x45	; 69
     454:	91 e0       	ldi	r25, 0x01	; 1
     456:	0e 94 10 05 	call	0xa20	; 0xa20 <LCD_writestr>
			
			TMR0_delayms(MS_DELAY_1000);
     45a:	68 ee       	ldi	r22, 0xE8	; 232
     45c:	73 e0       	ldi	r23, 0x03	; 3
     45e:	80 e0       	ldi	r24, 0x00	; 0
     460:	90 e0       	ldi	r25, 0x00	; 0
     462:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>
     466:	c5 c0       	rjmp	.+394    	; 0x5f2 <__EEPROM_REGION_LENGTH__+0x1f2>
		}
		
		/** CHECK IF BALANCE IS ENOUGH **/
		else if (database[u8_l_cardnum].f_a_cardbalance < u16_g_amount)
     468:	89 e1       	ldi	r24, 0x19	; 25
     46a:	8c 9f       	mul	r24, r28
     46c:	f0 01       	movw	r30, r0
     46e:	8d 9f       	mul	r24, r29
     470:	f0 0d       	add	r31, r0
     472:	11 24       	eor	r1, r1
     474:	e8 57       	subi	r30, 0x78	; 120
     476:	ff 4f       	sbci	r31, 0xFF	; 255
     478:	c0 80       	ld	r12, Z
     47a:	d1 80       	ldd	r13, Z+1	; 0x01
     47c:	e2 80       	ldd	r14, Z+2	; 0x02
     47e:	f3 80       	ldd	r15, Z+3	; 0x03
     480:	80 e0       	ldi	r24, 0x00	; 0
     482:	90 e0       	ldi	r25, 0x00	; 0
     484:	0e 94 1d 09 	call	0x123a	; 0x123a <__floatunsisf>
     488:	9b 01       	movw	r18, r22
     48a:	ac 01       	movw	r20, r24
     48c:	c7 01       	movw	r24, r14
     48e:	b6 01       	movw	r22, r12
     490:	0e 94 70 08 	call	0x10e0	; 0x10e0 <__cmpsf2>
     494:	88 23       	and	r24, r24
     496:	d4 f4       	brge	.+52     	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
		{
			LCD_sendcmd(LCD_CLEAR);
     498:	81 e0       	ldi	r24, 0x01	; 1
     49a:	0e 94 3f 04 	call	0x87e	; 0x87e <LCD_sendcmd>
			TMR0_delayms(MS_DELAY_20);
     49e:	64 e1       	ldi	r22, 0x14	; 20
     4a0:	70 e0       	ldi	r23, 0x00	; 0
     4a2:	80 e0       	ldi	r24, 0x00	; 0
     4a4:	90 e0       	ldi	r25, 0x00	; 0
     4a6:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>
			
			LCD_goto(LCD_POS_0,LCD_POS_1);
     4aa:	61 e0       	ldi	r22, 0x01	; 1
     4ac:	80 e0       	ldi	r24, 0x00	; 0
     4ae:	0e 94 23 05 	call	0xa46	; 0xa46 <LCD_goto>
			LCD_writestr("INSUFFICIENT ");
     4b2:	85 e5       	ldi	r24, 0x55	; 85
     4b4:	91 e0       	ldi	r25, 0x01	; 1
     4b6:	0e 94 10 05 	call	0xa20	; 0xa20 <LCD_writestr>
			
			LCD_goto(LCD_POS_1,LCD_POS_3);
     4ba:	63 e0       	ldi	r22, 0x03	; 3
     4bc:	81 e0       	ldi	r24, 0x01	; 1
     4be:	0e 94 23 05 	call	0xa46	; 0xa46 <LCD_goto>
			LCD_writestr("FUND");
     4c2:	83 e6       	ldi	r24, 0x63	; 99
     4c4:	91 e0       	ldi	r25, 0x01	; 1
     4c6:	0e 94 10 05 	call	0xa20	; 0xa20 <LCD_writestr>
     4ca:	93 c0       	rjmp	.+294    	; 0x5f2 <__EEPROM_REGION_LENGTH__+0x1f2>
		}
		
		else
		{
			LCD_sendcmd(LCD_CLEAR);
     4cc:	81 e0       	ldi	r24, 0x01	; 1
     4ce:	0e 94 3f 04 	call	0x87e	; 0x87e <LCD_sendcmd>
			TMR0_delayms(MS_DELAY_20);
     4d2:	64 e1       	ldi	r22, 0x14	; 20
     4d4:	70 e0       	ldi	r23, 0x00	; 0
     4d6:	80 e0       	ldi	r24, 0x00	; 0
     4d8:	90 e0       	ldi	r25, 0x00	; 0
     4da:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>
			
			LCD_goto(LCD_POS_0,LCD_POS_3);
     4de:	63 e0       	ldi	r22, 0x03	; 3
     4e0:	80 e0       	ldi	r24, 0x00	; 0
     4e2:	0e 94 23 05 	call	0xa46	; 0xa46 <LCD_goto>
			LCD_writestr("APPROVED");
     4e6:	88 e6       	ldi	r24, 0x68	; 104
     4e8:	91 e0       	ldi	r25, 0x01	; 1
     4ea:	0e 94 10 05 	call	0xa20	; 0xa20 <LCD_writestr>
			LCD_goto(LCD_POS_1,LCD_POS_3);
     4ee:	63 e0       	ldi	r22, 0x03	; 3
     4f0:	81 e0       	ldi	r24, 0x01	; 1
     4f2:	0e 94 23 05 	call	0xa46	; 0xa46 <LCD_goto>
			LCD_writestr("TRANSACTION");
     4f6:	81 e7       	ldi	r24, 0x71	; 113
     4f8:	91 e0       	ldi	r25, 0x01	; 1
     4fa:	0e 94 10 05 	call	0xa20	; 0xa20 <LCD_writestr>
			
			TMR0_delayms(MS_DELAY_1000);
     4fe:	68 ee       	ldi	r22, 0xE8	; 232
     500:	73 e0       	ldi	r23, 0x03	; 3
     502:	80 e0       	ldi	r24, 0x00	; 0
     504:	90 e0       	ldi	r25, 0x00	; 0
     506:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>
			
			LCD_sendcmd(LCD_CLEAR);
     50a:	81 e0       	ldi	r24, 0x01	; 1
     50c:	0e 94 3f 04 	call	0x87e	; 0x87e <LCD_sendcmd>
			TMR0_delayms(MS_DELAY_20);
     510:	64 e1       	ldi	r22, 0x14	; 20
     512:	70 e0       	ldi	r23, 0x00	; 0
     514:	80 e0       	ldi	r24, 0x00	; 0
     516:	90 e0       	ldi	r25, 0x00	; 0
     518:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>
			
			/** CALCULATE THE NEW BALANCE **/
			database[u8_l_cardnum].f_a_cardbalance -= u16_g_amount ; 
     51c:	29 e1       	ldi	r18, 0x19	; 25
     51e:	2c 9f       	mul	r18, r28
     520:	c0 01       	movw	r24, r0
     522:	2d 9f       	mul	r18, r29
     524:	90 0d       	add	r25, r0
     526:	11 24       	eor	r1, r1
     528:	ec 01       	movw	r28, r24
     52a:	c8 57       	subi	r28, 0x78	; 120
     52c:	df 4f       	sbci	r29, 0xFF	; 255
     52e:	60 91 ae 01 	lds	r22, 0x01AE	; 0x8001ae <__data_end>
     532:	70 91 af 01 	lds	r23, 0x01AF	; 0x8001af <__data_end+0x1>
     536:	80 e0       	ldi	r24, 0x00	; 0
     538:	90 e0       	ldi	r25, 0x00	; 0
     53a:	0e 94 1d 09 	call	0x123a	; 0x123a <__floatunsisf>
     53e:	9b 01       	movw	r18, r22
     540:	ac 01       	movw	r20, r24
     542:	68 81       	ld	r22, Y
     544:	79 81       	ldd	r23, Y+1	; 0x01
     546:	8a 81       	ldd	r24, Y+2	; 0x02
     548:	9b 81       	ldd	r25, Y+3	; 0x03
     54a:	0e 94 03 08 	call	0x1006	; 0x1006 <__subsf3>
     54e:	68 83       	st	Y, r22
     550:	79 83       	std	Y+1, r23	; 0x01
     552:	8a 83       	std	Y+2, r24	; 0x02
     554:	9b 83       	std	Y+3, r25	; 0x03
			
			LCD_goto(LCD_POS_0,LCD_POS_0);
     556:	60 e0       	ldi	r22, 0x00	; 0
     558:	80 e0       	ldi	r24, 0x00	; 0
     55a:	0e 94 23 05 	call	0xa46	; 0xa46 <LCD_goto>
			LCD_writestr("NEW BALANCE :");
     55e:	8d e7       	ldi	r24, 0x7D	; 125
     560:	91 e0       	ldi	r25, 0x01	; 1
     562:	0e 94 10 05 	call	0xa20	; 0xa20 <LCD_writestr>
			LCD_goto(LCD_POS_1,LCD_POS_4);
     566:	64 e0       	ldi	r22, 0x04	; 4
     568:	81 e0       	ldi	r24, 0x01	; 1
     56a:	0e 94 23 05 	call	0xa46	; 0xa46 <LCD_goto>
			LCD_writeint(database[u8_l_cardnum].f_a_cardbalance);
     56e:	68 81       	ld	r22, Y
     570:	79 81       	ldd	r23, Y+1	; 0x01
     572:	8a 81       	ldd	r24, Y+2	; 0x02
     574:	9b 81       	ldd	r25, Y+3	; 0x03
     576:	0e 94 e7 08 	call	0x11ce	; 0x11ce <__fixsfsi>
     57a:	0e 94 56 05 	call	0xaac	; 0xaac <LCD_writeint>
			
			TMR0_delayms(MS_DELAY_1000);
     57e:	68 ee       	ldi	r22, 0xE8	; 232
     580:	73 e0       	ldi	r23, 0x03	; 3
     582:	80 e0       	ldi	r24, 0x00	; 0
     584:	90 e0       	ldi	r25, 0x00	; 0
     586:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>
			
			LCD_sendcmd(LCD_CLEAR);
     58a:	81 e0       	ldi	r24, 0x01	; 1
     58c:	0e 94 3f 04 	call	0x87e	; 0x87e <LCD_sendcmd>
			TMR0_delayms(MS_DELAY_20);
     590:	64 e1       	ldi	r22, 0x14	; 20
     592:	70 e0       	ldi	r23, 0x00	; 0
     594:	80 e0       	ldi	r24, 0x00	; 0
     596:	90 e0       	ldi	r25, 0x00	; 0
     598:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>
			LCD_goto(LCD_POS_0,LCD_POS_0);
     59c:	60 e0       	ldi	r22, 0x00	; 0
     59e:	80 e0       	ldi	r24, 0x00	; 0
     5a0:	0e 94 23 05 	call	0xa46	; 0xa46 <LCD_goto>
			LCD_writestr("EJECTING CARD");
     5a4:	8b e8       	ldi	r24, 0x8B	; 139
     5a6:	91 e0       	ldi	r25, 0x01	; 1
     5a8:	0e 94 10 05 	call	0xa20	; 0xa20 <LCD_writestr>
     5ac:	22 c0       	rjmp	.+68     	; 0x5f2 <__EEPROM_REGION_LENGTH__+0x1f2>
		
	}
	
	else
	{
		BUZZ_on();  /** ALARM IS ON **/
     5ae:	0e 94 29 03 	call	0x652	; 0x652 <BUZZ_on>
		
		/** DISPLAY STATUS OVER THE LCD **/
		LCD_sendcmd(LCD_CLEAR);
     5b2:	81 e0       	ldi	r24, 0x01	; 1
     5b4:	0e 94 3f 04 	call	0x87e	; 0x87e <LCD_sendcmd>
		TMR0_delayms(MS_DELAY_20);
     5b8:	64 e1       	ldi	r22, 0x14	; 20
     5ba:	70 e0       	ldi	r23, 0x00	; 0
     5bc:	80 e0       	ldi	r24, 0x00	; 0
     5be:	90 e0       	ldi	r25, 0x00	; 0
     5c0:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>
		
		LCD_goto(LCD_POS_0,LCD_POS_0);
     5c4:	60 e0       	ldi	r22, 0x00	; 0
     5c6:	80 e0       	ldi	r24, 0x00	; 0
     5c8:	0e 94 23 05 	call	0xa46	; 0xa46 <LCD_goto>
		LCD_writestr("THIS IS A");
     5cc:	89 e9       	ldi	r24, 0x99	; 153
     5ce:	91 e0       	ldi	r25, 0x01	; 1
     5d0:	0e 94 10 05 	call	0xa20	; 0xa20 <LCD_writestr>
		LCD_goto(LCD_POS_1,LCD_POS_0);
     5d4:	60 e0       	ldi	r22, 0x00	; 0
     5d6:	81 e0       	ldi	r24, 0x01	; 1
     5d8:	0e 94 23 05 	call	0xa46	; 0xa46 <LCD_goto>
		LCD_writestr("FRAUD CARD");
     5dc:	83 ea       	ldi	r24, 0xA3	; 163
     5de:	91 e0       	ldi	r25, 0x01	; 1
     5e0:	0e 94 10 05 	call	0xa20	; 0xa20 <LCD_writestr>
		
		/** DISPLAY BELL SHAPE **/
		LCD_goto(LCD_POS_0 , LCD_POS_15);
     5e4:	6f e0       	ldi	r22, 0x0F	; 15
     5e6:	80 e0       	ldi	r24, 0x00	; 0
     5e8:	0e 94 23 05 	call	0xa46	; 0xa46 <LCD_goto>
		LCD_writechar(bell);
     5ec:	80 e0       	ldi	r24, 0x00	; 0
     5ee:	0e 94 c9 04 	call	0x992	; 0x992 <LCD_writechar>
	}
}
     5f2:	df 91       	pop	r29
     5f4:	cf 91       	pop	r28
     5f6:	ff 90       	pop	r15
     5f8:	ef 90       	pop	r14
     5fa:	df 90       	pop	r13
     5fc:	cf 90       	pop	r12
     5fe:	08 95       	ret

00000600 <Button_init>:
     600:	40 e0       	ldi	r20, 0x00	; 0
     602:	0e 94 ee 05 	call	0xbdc	; 0xbdc <DIO_setpindir>
     606:	08 95       	ret

00000608 <Is_pressed>:
     608:	0f 93       	push	r16
     60a:	1f 93       	push	r17
     60c:	cf 93       	push	r28
     60e:	df 93       	push	r29
     610:	1f 92       	push	r1
     612:	cd b7       	in	r28, 0x3d	; 61
     614:	de b7       	in	r29, 0x3e	; 62
     616:	8a 01       	movw	r16, r20
     618:	19 82       	std	Y+1, r1	; 0x01
     61a:	ae 01       	movw	r20, r28
     61c:	4f 5f       	subi	r20, 0xFF	; 255
     61e:	5f 4f       	sbci	r21, 0xFF	; 255
     620:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <DIO_readpin>
     624:	81 11       	cpse	r24, r1
     626:	05 c0       	rjmp	.+10     	; 0x632 <Is_pressed+0x2a>
     628:	89 81       	ldd	r24, Y+1	; 0x01
     62a:	f8 01       	movw	r30, r16
     62c:	80 83       	st	Z, r24
     62e:	81 e0       	ldi	r24, 0x01	; 1
     630:	04 c0       	rjmp	.+8      	; 0x63a <Is_pressed+0x32>
     632:	89 81       	ldd	r24, Y+1	; 0x01
     634:	f8 01       	movw	r30, r16
     636:	80 83       	st	Z, r24
     638:	80 e0       	ldi	r24, 0x00	; 0
     63a:	0f 90       	pop	r0
     63c:	df 91       	pop	r29
     63e:	cf 91       	pop	r28
     640:	1f 91       	pop	r17
     642:	0f 91       	pop	r16
     644:	08 95       	ret

00000646 <BUZZ_init>:
     646:	41 e0       	ldi	r20, 0x01	; 1
     648:	63 e0       	ldi	r22, 0x03	; 3
     64a:	81 e0       	ldi	r24, 0x01	; 1
     64c:	0e 94 ee 05 	call	0xbdc	; 0xbdc <DIO_setpindir>
     650:	08 95       	ret

00000652 <BUZZ_on>:
     652:	41 e0       	ldi	r20, 0x01	; 1
     654:	63 e0       	ldi	r22, 0x03	; 3
     656:	81 e0       	ldi	r24, 0x01	; 1
     658:	0e 94 6d 06 	call	0xcda	; 0xcda <DIO_setpinvalue>
     65c:	08 95       	ret

0000065e <BUZZ_off>:
     65e:	40 e0       	ldi	r20, 0x00	; 0
     660:	63 e0       	ldi	r22, 0x03	; 3
     662:	81 e0       	ldi	r24, 0x01	; 1
     664:	0e 94 6d 06 	call	0xcda	; 0xcda <DIO_setpinvalue>
     668:	08 95       	ret

0000066a <KEYPAD_init>:
     66a:	41 e0       	ldi	r20, 0x01	; 1
     66c:	62 e0       	ldi	r22, 0x02	; 2
     66e:	82 e0       	ldi	r24, 0x02	; 2
     670:	0e 94 ee 05 	call	0xbdc	; 0xbdc <DIO_setpindir>
     674:	41 e0       	ldi	r20, 0x01	; 1
     676:	63 e0       	ldi	r22, 0x03	; 3
     678:	82 e0       	ldi	r24, 0x02	; 2
     67a:	0e 94 ee 05 	call	0xbdc	; 0xbdc <DIO_setpindir>
     67e:	41 e0       	ldi	r20, 0x01	; 1
     680:	64 e0       	ldi	r22, 0x04	; 4
     682:	82 e0       	ldi	r24, 0x02	; 2
     684:	0e 94 ee 05 	call	0xbdc	; 0xbdc <DIO_setpindir>
     688:	41 e0       	ldi	r20, 0x01	; 1
     68a:	60 e0       	ldi	r22, 0x00	; 0
     68c:	83 e0       	ldi	r24, 0x03	; 3
     68e:	0e 94 ee 05 	call	0xbdc	; 0xbdc <DIO_setpindir>
     692:	40 e0       	ldi	r20, 0x00	; 0
     694:	65 e0       	ldi	r22, 0x05	; 5
     696:	82 e0       	ldi	r24, 0x02	; 2
     698:	0e 94 ee 05 	call	0xbdc	; 0xbdc <DIO_setpindir>
     69c:	40 e0       	ldi	r20, 0x00	; 0
     69e:	66 e0       	ldi	r22, 0x06	; 6
     6a0:	82 e0       	ldi	r24, 0x02	; 2
     6a2:	0e 94 ee 05 	call	0xbdc	; 0xbdc <DIO_setpindir>
     6a6:	40 e0       	ldi	r20, 0x00	; 0
     6a8:	67 e0       	ldi	r22, 0x07	; 7
     6aa:	82 e0       	ldi	r24, 0x02	; 2
     6ac:	0e 94 ee 05 	call	0xbdc	; 0xbdc <DIO_setpindir>
     6b0:	41 e0       	ldi	r20, 0x01	; 1
     6b2:	62 e0       	ldi	r22, 0x02	; 2
     6b4:	82 e0       	ldi	r24, 0x02	; 2
     6b6:	0e 94 6d 06 	call	0xcda	; 0xcda <DIO_setpinvalue>
     6ba:	41 e0       	ldi	r20, 0x01	; 1
     6bc:	63 e0       	ldi	r22, 0x03	; 3
     6be:	82 e0       	ldi	r24, 0x02	; 2
     6c0:	0e 94 6d 06 	call	0xcda	; 0xcda <DIO_setpinvalue>
     6c4:	41 e0       	ldi	r20, 0x01	; 1
     6c6:	64 e0       	ldi	r22, 0x04	; 4
     6c8:	82 e0       	ldi	r24, 0x02	; 2
     6ca:	0e 94 6d 06 	call	0xcda	; 0xcda <DIO_setpinvalue>
     6ce:	41 e0       	ldi	r20, 0x01	; 1
     6d0:	60 e0       	ldi	r22, 0x00	; 0
     6d2:	83 e0       	ldi	r24, 0x03	; 3
     6d4:	0e 94 6d 06 	call	0xcda	; 0xcda <DIO_setpinvalue>
     6d8:	41 e0       	ldi	r20, 0x01	; 1
     6da:	65 e0       	ldi	r22, 0x05	; 5
     6dc:	82 e0       	ldi	r24, 0x02	; 2
     6de:	0e 94 6d 06 	call	0xcda	; 0xcda <DIO_setpinvalue>
     6e2:	41 e0       	ldi	r20, 0x01	; 1
     6e4:	66 e0       	ldi	r22, 0x06	; 6
     6e6:	82 e0       	ldi	r24, 0x02	; 2
     6e8:	0e 94 6d 06 	call	0xcda	; 0xcda <DIO_setpinvalue>
     6ec:	41 e0       	ldi	r20, 0x01	; 1
     6ee:	67 e0       	ldi	r22, 0x07	; 7
     6f0:	82 e0       	ldi	r24, 0x02	; 2
     6f2:	0e 94 6d 06 	call	0xcda	; 0xcda <DIO_setpinvalue>
     6f6:	80 e0       	ldi	r24, 0x00	; 0
     6f8:	08 95       	ret

000006fa <KEYPAD_read>:
     6fa:	ef 92       	push	r14
     6fc:	ff 92       	push	r15
     6fe:	0f 93       	push	r16
     700:	1f 93       	push	r17
     702:	cf 93       	push	r28
     704:	df 93       	push	r29
     706:	cd b7       	in	r28, 0x3d	; 61
     708:	de b7       	in	r29, 0x3e	; 62
     70a:	27 97       	sbiw	r28, 0x07	; 7
     70c:	0f b6       	in	r0, 0x3f	; 63
     70e:	f8 94       	cli
     710:	de bf       	out	0x3e, r29	; 62
     712:	0f be       	out	0x3f, r0	; 63
     714:	cd bf       	out	0x3d, r28	; 61
     716:	7c 01       	movw	r14, r24
     718:	19 82       	std	Y+1, r1	; 0x01
     71a:	1a 82       	std	Y+2, r1	; 0x02
     71c:	1b 82       	std	Y+3, r1	; 0x03
     71e:	1c 82       	std	Y+4, r1	; 0x04
     720:	82 e0       	ldi	r24, 0x02	; 2
     722:	89 83       	std	Y+1, r24	; 0x01
     724:	83 e0       	ldi	r24, 0x03	; 3
     726:	8a 83       	std	Y+2, r24	; 0x02
     728:	84 e0       	ldi	r24, 0x04	; 4
     72a:	8b 83       	std	Y+3, r24	; 0x03
     72c:	85 e0       	ldi	r24, 0x05	; 5
     72e:	8d 83       	std	Y+5, r24	; 0x05
     730:	86 e0       	ldi	r24, 0x06	; 6
     732:	8e 83       	std	Y+6, r24	; 0x06
     734:	87 e0       	ldi	r24, 0x07	; 7
     736:	8f 83       	std	Y+7, r24	; 0x07
     738:	00 e0       	ldi	r16, 0x00	; 0
     73a:	90 c0       	rjmp	.+288    	; 0x85c <__DATA_REGION_LENGTH__+0x5c>
     73c:	03 30       	cpi	r16, 0x03	; 3
     73e:	39 f4       	brne	.+14     	; 0x74e <KEYPAD_read+0x54>
     740:	40 e0       	ldi	r20, 0x00	; 0
     742:	60 e0       	ldi	r22, 0x00	; 0
     744:	83 e0       	ldi	r24, 0x03	; 3
     746:	0e 94 6d 06 	call	0xcda	; 0xcda <DIO_setpinvalue>
     74a:	10 e0       	ldi	r17, 0x00	; 0
     74c:	72 c0       	rjmp	.+228    	; 0x832 <__DATA_REGION_LENGTH__+0x32>
     74e:	e1 e0       	ldi	r30, 0x01	; 1
     750:	f0 e0       	ldi	r31, 0x00	; 0
     752:	ec 0f       	add	r30, r28
     754:	fd 1f       	adc	r31, r29
     756:	e0 0f       	add	r30, r16
     758:	f1 1d       	adc	r31, r1
     75a:	40 e0       	ldi	r20, 0x00	; 0
     75c:	60 81       	ld	r22, Z
     75e:	82 e0       	ldi	r24, 0x02	; 2
     760:	0e 94 6d 06 	call	0xcda	; 0xcda <DIO_setpinvalue>
     764:	f2 cf       	rjmp	.-28     	; 0x74a <KEYPAD_read+0x50>
     766:	e5 e0       	ldi	r30, 0x05	; 5
     768:	f0 e0       	ldi	r31, 0x00	; 0
     76a:	ec 0f       	add	r30, r28
     76c:	fd 1f       	adc	r31, r29
     76e:	e1 0f       	add	r30, r17
     770:	f1 1d       	adc	r31, r1
     772:	a7 01       	movw	r20, r14
     774:	60 81       	ld	r22, Z
     776:	82 e0       	ldi	r24, 0x02	; 2
     778:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <DIO_readpin>
     77c:	f7 01       	movw	r30, r14
     77e:	80 81       	ld	r24, Z
     780:	81 11       	cpse	r24, r1
     782:	56 c0       	rjmp	.+172    	; 0x830 <__DATA_REGION_LENGTH__+0x30>
     784:	01 11       	cpse	r16, r1
     786:	11 c0       	rjmp	.+34     	; 0x7aa <KEYPAD_read+0xb0>
     788:	11 11       	cpse	r17, r1
     78a:	03 c0       	rjmp	.+6      	; 0x792 <KEYPAD_read+0x98>
     78c:	81 e3       	ldi	r24, 0x31	; 49
     78e:	80 83       	st	Z, r24
     790:	3b c0       	rjmp	.+118    	; 0x808 <__DATA_REGION_LENGTH__+0x8>
     792:	11 30       	cpi	r17, 0x01	; 1
     794:	21 f4       	brne	.+8      	; 0x79e <KEYPAD_read+0xa4>
     796:	82 e3       	ldi	r24, 0x32	; 50
     798:	f7 01       	movw	r30, r14
     79a:	80 83       	st	Z, r24
     79c:	35 c0       	rjmp	.+106    	; 0x808 <__DATA_REGION_LENGTH__+0x8>
     79e:	12 30       	cpi	r17, 0x02	; 2
     7a0:	99 f5       	brne	.+102    	; 0x808 <__DATA_REGION_LENGTH__+0x8>
     7a2:	83 e3       	ldi	r24, 0x33	; 51
     7a4:	f7 01       	movw	r30, r14
     7a6:	80 83       	st	Z, r24
     7a8:	2f c0       	rjmp	.+94     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
     7aa:	01 30       	cpi	r16, 0x01	; 1
     7ac:	91 f4       	brne	.+36     	; 0x7d2 <KEYPAD_read+0xd8>
     7ae:	11 11       	cpse	r17, r1
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <KEYPAD_read+0xc0>
     7b2:	84 e3       	ldi	r24, 0x34	; 52
     7b4:	f7 01       	movw	r30, r14
     7b6:	80 83       	st	Z, r24
     7b8:	27 c0       	rjmp	.+78     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
     7ba:	11 30       	cpi	r17, 0x01	; 1
     7bc:	21 f4       	brne	.+8      	; 0x7c6 <KEYPAD_read+0xcc>
     7be:	85 e3       	ldi	r24, 0x35	; 53
     7c0:	f7 01       	movw	r30, r14
     7c2:	80 83       	st	Z, r24
     7c4:	21 c0       	rjmp	.+66     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
     7c6:	12 30       	cpi	r17, 0x02	; 2
     7c8:	f9 f4       	brne	.+62     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
     7ca:	86 e3       	ldi	r24, 0x36	; 54
     7cc:	f7 01       	movw	r30, r14
     7ce:	80 83       	st	Z, r24
     7d0:	1b c0       	rjmp	.+54     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
     7d2:	02 30       	cpi	r16, 0x02	; 2
     7d4:	91 f4       	brne	.+36     	; 0x7fa <KEYPAD_read+0x100>
     7d6:	11 11       	cpse	r17, r1
     7d8:	04 c0       	rjmp	.+8      	; 0x7e2 <KEYPAD_read+0xe8>
     7da:	87 e3       	ldi	r24, 0x37	; 55
     7dc:	f7 01       	movw	r30, r14
     7de:	80 83       	st	Z, r24
     7e0:	13 c0       	rjmp	.+38     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
     7e2:	11 30       	cpi	r17, 0x01	; 1
     7e4:	21 f4       	brne	.+8      	; 0x7ee <KEYPAD_read+0xf4>
     7e6:	88 e3       	ldi	r24, 0x38	; 56
     7e8:	f7 01       	movw	r30, r14
     7ea:	80 83       	st	Z, r24
     7ec:	0d c0       	rjmp	.+26     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
     7ee:	12 30       	cpi	r17, 0x02	; 2
     7f0:	59 f4       	brne	.+22     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
     7f2:	89 e3       	ldi	r24, 0x39	; 57
     7f4:	f7 01       	movw	r30, r14
     7f6:	80 83       	st	Z, r24
     7f8:	07 c0       	rjmp	.+14     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
     7fa:	03 30       	cpi	r16, 0x03	; 3
     7fc:	29 f4       	brne	.+10     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
     7fe:	11 11       	cpse	r17, r1
     800:	03 c0       	rjmp	.+6      	; 0x808 <__DATA_REGION_LENGTH__+0x8>
     802:	80 e3       	ldi	r24, 0x30	; 48
     804:	f7 01       	movw	r30, r14
     806:	80 83       	st	Z, r24
     808:	03 30       	cpi	r16, 0x03	; 3
     80a:	31 f4       	brne	.+12     	; 0x818 <__DATA_REGION_LENGTH__+0x18>
     80c:	60 e0       	ldi	r22, 0x00	; 0
     80e:	83 e0       	ldi	r24, 0x03	; 3
     810:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_togglepin>
     814:	80 e0       	ldi	r24, 0x00	; 0
     816:	26 c0       	rjmp	.+76     	; 0x864 <__stack+0x5>
     818:	e1 e0       	ldi	r30, 0x01	; 1
     81a:	f0 e0       	ldi	r31, 0x00	; 0
     81c:	ec 0f       	add	r30, r28
     81e:	fd 1f       	adc	r31, r29
     820:	e0 0f       	add	r30, r16
     822:	f1 1d       	adc	r31, r1
     824:	60 81       	ld	r22, Z
     826:	82 e0       	ldi	r24, 0x02	; 2
     828:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_togglepin>
     82c:	80 e0       	ldi	r24, 0x00	; 0
     82e:	1a c0       	rjmp	.+52     	; 0x864 <__stack+0x5>
     830:	1f 5f       	subi	r17, 0xFF	; 255
     832:	13 30       	cpi	r17, 0x03	; 3
     834:	08 f4       	brcc	.+2      	; 0x838 <__DATA_REGION_LENGTH__+0x38>
     836:	97 cf       	rjmp	.-210    	; 0x766 <KEYPAD_read+0x6c>
     838:	03 30       	cpi	r16, 0x03	; 3
     83a:	29 f4       	brne	.+10     	; 0x846 <__DATA_REGION_LENGTH__+0x46>
     83c:	60 e0       	ldi	r22, 0x00	; 0
     83e:	83 e0       	ldi	r24, 0x03	; 3
     840:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_togglepin>
     844:	0a c0       	rjmp	.+20     	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
     846:	e1 e0       	ldi	r30, 0x01	; 1
     848:	f0 e0       	ldi	r31, 0x00	; 0
     84a:	ec 0f       	add	r30, r28
     84c:	fd 1f       	adc	r31, r29
     84e:	e0 0f       	add	r30, r16
     850:	f1 1d       	adc	r31, r1
     852:	60 81       	ld	r22, Z
     854:	82 e0       	ldi	r24, 0x02	; 2
     856:	0e 94 2a 07 	call	0xe54	; 0xe54 <DIO_togglepin>
     85a:	0f 5f       	subi	r16, 0xFF	; 255
     85c:	04 30       	cpi	r16, 0x04	; 4
     85e:	08 f4       	brcc	.+2      	; 0x862 <__stack+0x3>
     860:	6d cf       	rjmp	.-294    	; 0x73c <KEYPAD_read+0x42>
     862:	81 e0       	ldi	r24, 0x01	; 1
     864:	27 96       	adiw	r28, 0x07	; 7
     866:	0f b6       	in	r0, 0x3f	; 63
     868:	f8 94       	cli
     86a:	de bf       	out	0x3e, r29	; 62
     86c:	0f be       	out	0x3f, r0	; 63
     86e:	cd bf       	out	0x3d, r28	; 61
     870:	df 91       	pop	r29
     872:	cf 91       	pop	r28
     874:	1f 91       	pop	r17
     876:	0f 91       	pop	r16
     878:	ff 90       	pop	r15
     87a:	ef 90       	pop	r14
     87c:	08 95       	ret

0000087e <LCD_sendcmd>:
     87e:	cf 93       	push	r28
     880:	c8 2f       	mov	r28, r24
     882:	0e 94 a0 07 	call	0xf40	; 0xf40 <TMR0_init>
     886:	40 e0       	ldi	r20, 0x00	; 0
     888:	61 e0       	ldi	r22, 0x01	; 1
     88a:	80 e0       	ldi	r24, 0x00	; 0
     88c:	0e 94 6d 06 	call	0xcda	; 0xcda <DIO_setpinvalue>
     890:	40 e0       	ldi	r20, 0x00	; 0
     892:	62 e0       	ldi	r22, 0x02	; 2
     894:	80 e0       	ldi	r24, 0x00	; 0
     896:	0e 94 6d 06 	call	0xcda	; 0xcda <DIO_setpinvalue>
     89a:	40 e0       	ldi	r20, 0x00	; 0
     89c:	63 e0       	ldi	r22, 0x03	; 3
     89e:	80 e0       	ldi	r24, 0x00	; 0
     8a0:	0e 94 6d 06 	call	0xcda	; 0xcda <DIO_setpinvalue>
     8a4:	8b b3       	in	r24, 0x1b	; 27
     8a6:	9c 2f       	mov	r25, r28
     8a8:	90 7f       	andi	r25, 0xF0	; 240
     8aa:	8f 70       	andi	r24, 0x0F	; 15
     8ac:	89 2b       	or	r24, r25
     8ae:	8b bb       	out	0x1b, r24	; 27
     8b0:	41 e0       	ldi	r20, 0x01	; 1
     8b2:	63 e0       	ldi	r22, 0x03	; 3
     8b4:	80 e0       	ldi	r24, 0x00	; 0
     8b6:	0e 94 6d 06 	call	0xcda	; 0xcda <DIO_setpinvalue>
     8ba:	61 e0       	ldi	r22, 0x01	; 1
     8bc:	70 e0       	ldi	r23, 0x00	; 0
     8be:	80 e0       	ldi	r24, 0x00	; 0
     8c0:	90 e0       	ldi	r25, 0x00	; 0
     8c2:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>
     8c6:	40 e0       	ldi	r20, 0x00	; 0
     8c8:	63 e0       	ldi	r22, 0x03	; 3
     8ca:	80 e0       	ldi	r24, 0x00	; 0
     8cc:	0e 94 6d 06 	call	0xcda	; 0xcda <DIO_setpinvalue>
     8d0:	20 e1       	ldi	r18, 0x10	; 16
     8d2:	c2 9f       	mul	r28, r18
     8d4:	c0 01       	movw	r24, r0
     8d6:	11 24       	eor	r1, r1
     8d8:	9b b3       	in	r25, 0x1b	; 27
     8da:	9f 70       	andi	r25, 0x0F	; 15
     8dc:	89 2b       	or	r24, r25
     8de:	8b bb       	out	0x1b, r24	; 27
     8e0:	41 e0       	ldi	r20, 0x01	; 1
     8e2:	63 e0       	ldi	r22, 0x03	; 3
     8e4:	80 e0       	ldi	r24, 0x00	; 0
     8e6:	0e 94 6d 06 	call	0xcda	; 0xcda <DIO_setpinvalue>
     8ea:	61 e0       	ldi	r22, 0x01	; 1
     8ec:	70 e0       	ldi	r23, 0x00	; 0
     8ee:	80 e0       	ldi	r24, 0x00	; 0
     8f0:	90 e0       	ldi	r25, 0x00	; 0
     8f2:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>
     8f6:	40 e0       	ldi	r20, 0x00	; 0
     8f8:	63 e0       	ldi	r22, 0x03	; 3
     8fa:	80 e0       	ldi	r24, 0x00	; 0
     8fc:	0e 94 6d 06 	call	0xcda	; 0xcda <DIO_setpinvalue>
     900:	65 e0       	ldi	r22, 0x05	; 5
     902:	70 e0       	ldi	r23, 0x00	; 0
     904:	80 e0       	ldi	r24, 0x00	; 0
     906:	90 e0       	ldi	r25, 0x00	; 0
     908:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>
     90c:	cf 91       	pop	r28
     90e:	08 95       	ret

00000910 <LCD_init>:
     910:	0e 94 a0 07 	call	0xf40	; 0xf40 <TMR0_init>
     914:	41 e0       	ldi	r20, 0x01	; 1
     916:	61 e0       	ldi	r22, 0x01	; 1
     918:	80 e0       	ldi	r24, 0x00	; 0
     91a:	0e 94 ee 05 	call	0xbdc	; 0xbdc <DIO_setpindir>
     91e:	41 e0       	ldi	r20, 0x01	; 1
     920:	62 e0       	ldi	r22, 0x02	; 2
     922:	80 e0       	ldi	r24, 0x00	; 0
     924:	0e 94 ee 05 	call	0xbdc	; 0xbdc <DIO_setpindir>
     928:	41 e0       	ldi	r20, 0x01	; 1
     92a:	63 e0       	ldi	r22, 0x03	; 3
     92c:	80 e0       	ldi	r24, 0x00	; 0
     92e:	0e 94 ee 05 	call	0xbdc	; 0xbdc <DIO_setpindir>
     932:	41 e0       	ldi	r20, 0x01	; 1
     934:	64 e0       	ldi	r22, 0x04	; 4
     936:	80 e0       	ldi	r24, 0x00	; 0
     938:	0e 94 ee 05 	call	0xbdc	; 0xbdc <DIO_setpindir>
     93c:	41 e0       	ldi	r20, 0x01	; 1
     93e:	65 e0       	ldi	r22, 0x05	; 5
     940:	80 e0       	ldi	r24, 0x00	; 0
     942:	0e 94 ee 05 	call	0xbdc	; 0xbdc <DIO_setpindir>
     946:	41 e0       	ldi	r20, 0x01	; 1
     948:	66 e0       	ldi	r22, 0x06	; 6
     94a:	80 e0       	ldi	r24, 0x00	; 0
     94c:	0e 94 ee 05 	call	0xbdc	; 0xbdc <DIO_setpindir>
     950:	41 e0       	ldi	r20, 0x01	; 1
     952:	67 e0       	ldi	r22, 0x07	; 7
     954:	80 e0       	ldi	r24, 0x00	; 0
     956:	0e 94 ee 05 	call	0xbdc	; 0xbdc <DIO_setpindir>
     95a:	64 e1       	ldi	r22, 0x14	; 20
     95c:	70 e0       	ldi	r23, 0x00	; 0
     95e:	80 e0       	ldi	r24, 0x00	; 0
     960:	90 e0       	ldi	r25, 0x00	; 0
     962:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>
     966:	83 e3       	ldi	r24, 0x33	; 51
     968:	0e 94 3f 04 	call	0x87e	; 0x87e <LCD_sendcmd>
     96c:	82 e3       	ldi	r24, 0x32	; 50
     96e:	0e 94 3f 04 	call	0x87e	; 0x87e <LCD_sendcmd>
     972:	88 e2       	ldi	r24, 0x28	; 40
     974:	0e 94 3f 04 	call	0x87e	; 0x87e <LCD_sendcmd>
     978:	8c e0       	ldi	r24, 0x0C	; 12
     97a:	0e 94 3f 04 	call	0x87e	; 0x87e <LCD_sendcmd>
     97e:	86 e0       	ldi	r24, 0x06	; 6
     980:	0e 94 3f 04 	call	0x87e	; 0x87e <LCD_sendcmd>
     984:	82 e0       	ldi	r24, 0x02	; 2
     986:	0e 94 3f 04 	call	0x87e	; 0x87e <LCD_sendcmd>
     98a:	81 e0       	ldi	r24, 0x01	; 1
     98c:	0e 94 3f 04 	call	0x87e	; 0x87e <LCD_sendcmd>
     990:	08 95       	ret

00000992 <LCD_writechar>:
     992:	cf 93       	push	r28
     994:	c8 2f       	mov	r28, r24
     996:	41 e0       	ldi	r20, 0x01	; 1
     998:	61 e0       	ldi	r22, 0x01	; 1
     99a:	80 e0       	ldi	r24, 0x00	; 0
     99c:	0e 94 6d 06 	call	0xcda	; 0xcda <DIO_setpinvalue>
     9a0:	40 e0       	ldi	r20, 0x00	; 0
     9a2:	62 e0       	ldi	r22, 0x02	; 2
     9a4:	80 e0       	ldi	r24, 0x00	; 0
     9a6:	0e 94 6d 06 	call	0xcda	; 0xcda <DIO_setpinvalue>
     9aa:	40 e0       	ldi	r20, 0x00	; 0
     9ac:	63 e0       	ldi	r22, 0x03	; 3
     9ae:	80 e0       	ldi	r24, 0x00	; 0
     9b0:	0e 94 6d 06 	call	0xcda	; 0xcda <DIO_setpinvalue>
     9b4:	8b b3       	in	r24, 0x1b	; 27
     9b6:	9c 2f       	mov	r25, r28
     9b8:	90 7f       	andi	r25, 0xF0	; 240
     9ba:	8f 70       	andi	r24, 0x0F	; 15
     9bc:	89 2b       	or	r24, r25
     9be:	8b bb       	out	0x1b, r24	; 27
     9c0:	41 e0       	ldi	r20, 0x01	; 1
     9c2:	63 e0       	ldi	r22, 0x03	; 3
     9c4:	80 e0       	ldi	r24, 0x00	; 0
     9c6:	0e 94 6d 06 	call	0xcda	; 0xcda <DIO_setpinvalue>
     9ca:	61 e0       	ldi	r22, 0x01	; 1
     9cc:	70 e0       	ldi	r23, 0x00	; 0
     9ce:	80 e0       	ldi	r24, 0x00	; 0
     9d0:	90 e0       	ldi	r25, 0x00	; 0
     9d2:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>
     9d6:	40 e0       	ldi	r20, 0x00	; 0
     9d8:	63 e0       	ldi	r22, 0x03	; 3
     9da:	80 e0       	ldi	r24, 0x00	; 0
     9dc:	0e 94 6d 06 	call	0xcda	; 0xcda <DIO_setpinvalue>
     9e0:	20 e1       	ldi	r18, 0x10	; 16
     9e2:	c2 9f       	mul	r28, r18
     9e4:	c0 01       	movw	r24, r0
     9e6:	11 24       	eor	r1, r1
     9e8:	9b b3       	in	r25, 0x1b	; 27
     9ea:	9f 70       	andi	r25, 0x0F	; 15
     9ec:	89 2b       	or	r24, r25
     9ee:	8b bb       	out	0x1b, r24	; 27
     9f0:	41 e0       	ldi	r20, 0x01	; 1
     9f2:	63 e0       	ldi	r22, 0x03	; 3
     9f4:	80 e0       	ldi	r24, 0x00	; 0
     9f6:	0e 94 6d 06 	call	0xcda	; 0xcda <DIO_setpinvalue>
     9fa:	61 e0       	ldi	r22, 0x01	; 1
     9fc:	70 e0       	ldi	r23, 0x00	; 0
     9fe:	80 e0       	ldi	r24, 0x00	; 0
     a00:	90 e0       	ldi	r25, 0x00	; 0
     a02:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>
     a06:	40 e0       	ldi	r20, 0x00	; 0
     a08:	63 e0       	ldi	r22, 0x03	; 3
     a0a:	80 e0       	ldi	r24, 0x00	; 0
     a0c:	0e 94 6d 06 	call	0xcda	; 0xcda <DIO_setpinvalue>
     a10:	65 e0       	ldi	r22, 0x05	; 5
     a12:	70 e0       	ldi	r23, 0x00	; 0
     a14:	80 e0       	ldi	r24, 0x00	; 0
     a16:	90 e0       	ldi	r25, 0x00	; 0
     a18:	0e 94 c7 07 	call	0xf8e	; 0xf8e <TMR0_delayms>
     a1c:	cf 91       	pop	r28
     a1e:	08 95       	ret

00000a20 <LCD_writestr>:
     a20:	0f 93       	push	r16
     a22:	1f 93       	push	r17
     a24:	cf 93       	push	r28
     a26:	8c 01       	movw	r16, r24
     a28:	c0 e0       	ldi	r28, 0x00	; 0
     a2a:	03 c0       	rjmp	.+6      	; 0xa32 <LCD_writestr+0x12>
     a2c:	0e 94 c9 04 	call	0x992	; 0x992 <LCD_writechar>
     a30:	cf 5f       	subi	r28, 0xFF	; 255
     a32:	f8 01       	movw	r30, r16
     a34:	ec 0f       	add	r30, r28
     a36:	f1 1d       	adc	r31, r1
     a38:	80 81       	ld	r24, Z
     a3a:	81 11       	cpse	r24, r1
     a3c:	f7 cf       	rjmp	.-18     	; 0xa2c <LCD_writestr+0xc>
     a3e:	cf 91       	pop	r28
     a40:	1f 91       	pop	r17
     a42:	0f 91       	pop	r16
     a44:	08 95       	ret

00000a46 <LCD_goto>:
     a46:	cf 93       	push	r28
     a48:	df 93       	push	r29
     a4a:	00 d0       	rcall	.+0      	; 0xa4c <LCD_goto+0x6>
     a4c:	cd b7       	in	r28, 0x3d	; 61
     a4e:	de b7       	in	r29, 0x3e	; 62
     a50:	90 e8       	ldi	r25, 0x80	; 128
     a52:	99 83       	std	Y+1, r25	; 0x01
     a54:	90 ec       	ldi	r25, 0xC0	; 192
     a56:	9a 83       	std	Y+2, r25	; 0x02
     a58:	e1 e0       	ldi	r30, 0x01	; 1
     a5a:	f0 e0       	ldi	r31, 0x00	; 0
     a5c:	ec 0f       	add	r30, r28
     a5e:	fd 1f       	adc	r31, r29
     a60:	e8 0f       	add	r30, r24
     a62:	f1 1d       	adc	r31, r1
     a64:	80 81       	ld	r24, Z
     a66:	86 0f       	add	r24, r22
     a68:	0e 94 3f 04 	call	0x87e	; 0x87e <LCD_sendcmd>
     a6c:	0f 90       	pop	r0
     a6e:	0f 90       	pop	r0
     a70:	df 91       	pop	r29
     a72:	cf 91       	pop	r28
     a74:	08 95       	ret

00000a76 <LCD_writecustomchar>:
     a76:	0f 93       	push	r16
     a78:	1f 93       	push	r17
     a7a:	cf 93       	push	r28
     a7c:	8c 01       	movw	r16, r24
     a7e:	86 2f       	mov	r24, r22
     a80:	90 e0       	ldi	r25, 0x00	; 0
     a82:	08 96       	adiw	r24, 0x08	; 8
     a84:	88 0f       	add	r24, r24
     a86:	88 0f       	add	r24, r24
     a88:	88 0f       	add	r24, r24
     a8a:	0e 94 3f 04 	call	0x87e	; 0x87e <LCD_sendcmd>
     a8e:	c0 e0       	ldi	r28, 0x00	; 0
     a90:	07 c0       	rjmp	.+14     	; 0xaa0 <LCD_writecustomchar+0x2a>
     a92:	f8 01       	movw	r30, r16
     a94:	ec 0f       	add	r30, r28
     a96:	f1 1d       	adc	r31, r1
     a98:	80 81       	ld	r24, Z
     a9a:	0e 94 c9 04 	call	0x992	; 0x992 <LCD_writechar>
     a9e:	cf 5f       	subi	r28, 0xFF	; 255
     aa0:	c8 30       	cpi	r28, 0x08	; 8
     aa2:	b8 f3       	brcs	.-18     	; 0xa92 <LCD_writecustomchar+0x1c>
     aa4:	cf 91       	pop	r28
     aa6:	1f 91       	pop	r17
     aa8:	0f 91       	pop	r16
     aaa:	08 95       	ret

00000aac <LCD_writeint>:
     aac:	1f 93       	push	r17
     aae:	cf 93       	push	r28
     ab0:	df 93       	push	r29
     ab2:	cd b7       	in	r28, 0x3d	; 61
     ab4:	de b7       	in	r29, 0x3e	; 62
     ab6:	2a 97       	sbiw	r28, 0x0a	; 10
     ab8:	0f b6       	in	r0, 0x3f	; 63
     aba:	f8 94       	cli
     abc:	de bf       	out	0x3e, r29	; 62
     abe:	0f be       	out	0x3f, r0	; 63
     ac0:	cd bf       	out	0x3d, r28	; 61
     ac2:	99 23       	and	r25, r25
     ac4:	dc f5       	brge	.+118    	; 0xb3c <LCD_writeint+0x90>
     ac6:	90 95       	com	r25
     ac8:	80 95       	com	r24
     aca:	70 95       	com	r23
     acc:	61 95       	neg	r22
     ace:	7f 4f       	sbci	r23, 0xFF	; 255
     ad0:	8f 4f       	sbci	r24, 0xFF	; 255
     ad2:	9f 4f       	sbci	r25, 0xFF	; 255
     ad4:	10 e0       	ldi	r17, 0x00	; 0
     ad6:	13 c0       	rjmp	.+38     	; 0xafe <LCD_writeint+0x52>
     ad8:	2a e0       	ldi	r18, 0x0A	; 10
     ada:	30 e0       	ldi	r19, 0x00	; 0
     adc:	40 e0       	ldi	r20, 0x00	; 0
     ade:	50 e0       	ldi	r21, 0x00	; 0
     ae0:	0e 94 cf 09 	call	0x139e	; 0x139e <__divmodsi4>
     ae4:	e1 e0       	ldi	r30, 0x01	; 1
     ae6:	f0 e0       	ldi	r31, 0x00	; 0
     ae8:	ec 0f       	add	r30, r28
     aea:	fd 1f       	adc	r31, r29
     aec:	e1 0f       	add	r30, r17
     aee:	f1 1d       	adc	r31, r1
     af0:	60 5d       	subi	r22, 0xD0	; 208
     af2:	60 83       	st	Z, r22
     af4:	62 2f       	mov	r22, r18
     af6:	73 2f       	mov	r23, r19
     af8:	84 2f       	mov	r24, r20
     afa:	95 2f       	mov	r25, r21
     afc:	1f 5f       	subi	r17, 0xFF	; 255
     afe:	16 16       	cp	r1, r22
     b00:	17 06       	cpc	r1, r23
     b02:	18 06       	cpc	r1, r24
     b04:	19 06       	cpc	r1, r25
     b06:	44 f3       	brlt	.-48     	; 0xad8 <LCD_writeint+0x2c>
     b08:	e1 e0       	ldi	r30, 0x01	; 1
     b0a:	f0 e0       	ldi	r31, 0x00	; 0
     b0c:	ec 0f       	add	r30, r28
     b0e:	fd 1f       	adc	r31, r29
     b10:	e1 0f       	add	r30, r17
     b12:	f1 1d       	adc	r31, r1
     b14:	8d e2       	ldi	r24, 0x2D	; 45
     b16:	80 83       	st	Z, r24
     b18:	1f 5f       	subi	r17, 0xFF	; 255
     b1a:	0d c0       	rjmp	.+26     	; 0xb36 <LCD_writeint+0x8a>
     b1c:	e1 2f       	mov	r30, r17
     b1e:	f0 e0       	ldi	r31, 0x00	; 0
     b20:	31 97       	sbiw	r30, 0x01	; 1
     b22:	81 e0       	ldi	r24, 0x01	; 1
     b24:	90 e0       	ldi	r25, 0x00	; 0
     b26:	8c 0f       	add	r24, r28
     b28:	9d 1f       	adc	r25, r29
     b2a:	e8 0f       	add	r30, r24
     b2c:	f9 1f       	adc	r31, r25
     b2e:	80 81       	ld	r24, Z
     b30:	0e 94 c9 04 	call	0x992	; 0x992 <LCD_writechar>
     b34:	11 50       	subi	r17, 0x01	; 1
     b36:	11 11       	cpse	r17, r1
     b38:	f1 cf       	rjmp	.-30     	; 0xb1c <LCD_writeint+0x70>
     b3a:	39 c0       	rjmp	.+114    	; 0xbae <LCD_writeint+0x102>
     b3c:	61 15       	cp	r22, r1
     b3e:	71 05       	cpc	r23, r1
     b40:	81 05       	cpc	r24, r1
     b42:	91 05       	cpc	r25, r1
     b44:	21 f4       	brne	.+8      	; 0xb4e <LCD_writeint+0xa2>
     b46:	80 e3       	ldi	r24, 0x30	; 48
     b48:	0e 94 c9 04 	call	0x992	; 0x992 <LCD_writechar>
     b4c:	30 c0       	rjmp	.+96     	; 0xbae <LCD_writeint+0x102>
     b4e:	16 16       	cp	r1, r22
     b50:	17 06       	cpc	r1, r23
     b52:	18 06       	cpc	r1, r24
     b54:	19 06       	cpc	r1, r25
     b56:	ac f0       	brlt	.+42     	; 0xb82 <LCD_writeint+0xd6>
     b58:	2a c0       	rjmp	.+84     	; 0xbae <LCD_writeint+0x102>
     b5a:	2a e0       	ldi	r18, 0x0A	; 10
     b5c:	30 e0       	ldi	r19, 0x00	; 0
     b5e:	40 e0       	ldi	r20, 0x00	; 0
     b60:	50 e0       	ldi	r21, 0x00	; 0
     b62:	0e 94 cf 09 	call	0x139e	; 0x139e <__divmodsi4>
     b66:	e1 e0       	ldi	r30, 0x01	; 1
     b68:	f0 e0       	ldi	r31, 0x00	; 0
     b6a:	ec 0f       	add	r30, r28
     b6c:	fd 1f       	adc	r31, r29
     b6e:	e1 0f       	add	r30, r17
     b70:	f1 1d       	adc	r31, r1
     b72:	60 5d       	subi	r22, 0xD0	; 208
     b74:	60 83       	st	Z, r22
     b76:	62 2f       	mov	r22, r18
     b78:	73 2f       	mov	r23, r19
     b7a:	84 2f       	mov	r24, r20
     b7c:	95 2f       	mov	r25, r21
     b7e:	1f 5f       	subi	r17, 0xFF	; 255
     b80:	01 c0       	rjmp	.+2      	; 0xb84 <LCD_writeint+0xd8>
     b82:	10 e0       	ldi	r17, 0x00	; 0
     b84:	16 16       	cp	r1, r22
     b86:	17 06       	cpc	r1, r23
     b88:	18 06       	cpc	r1, r24
     b8a:	19 06       	cpc	r1, r25
     b8c:	34 f3       	brlt	.-52     	; 0xb5a <LCD_writeint+0xae>
     b8e:	0d c0       	rjmp	.+26     	; 0xbaa <LCD_writeint+0xfe>
     b90:	e1 2f       	mov	r30, r17
     b92:	f0 e0       	ldi	r31, 0x00	; 0
     b94:	31 97       	sbiw	r30, 0x01	; 1
     b96:	81 e0       	ldi	r24, 0x01	; 1
     b98:	90 e0       	ldi	r25, 0x00	; 0
     b9a:	8c 0f       	add	r24, r28
     b9c:	9d 1f       	adc	r25, r29
     b9e:	e8 0f       	add	r30, r24
     ba0:	f9 1f       	adc	r31, r25
     ba2:	80 81       	ld	r24, Z
     ba4:	0e 94 c9 04 	call	0x992	; 0x992 <LCD_writechar>
     ba8:	11 50       	subi	r17, 0x01	; 1
     baa:	11 11       	cpse	r17, r1
     bac:	f1 cf       	rjmp	.-30     	; 0xb90 <LCD_writeint+0xe4>
     bae:	2a 96       	adiw	r28, 0x0a	; 10
     bb0:	0f b6       	in	r0, 0x3f	; 63
     bb2:	f8 94       	cli
     bb4:	de bf       	out	0x3e, r29	; 62
     bb6:	0f be       	out	0x3f, r0	; 63
     bb8:	cd bf       	out	0x3d, r28	; 61
     bba:	df 91       	pop	r29
     bbc:	cf 91       	pop	r28
     bbe:	1f 91       	pop	r17
     bc0:	08 95       	ret

00000bc2 <main>:

#include "APP/APP.h"

int main(void)
{
	APP_init(); /** INITIALIZATION **/
     bc2:	0e 94 49 00 	call	0x92	; 0x92 <APP_init>
	
	APP_readuserpin(); /** READ USER PIN **/
     bc6:	0e 94 9d 00 	call	0x13a	; 0x13a <APP_readuserpin>
	
	APP_startcardcomm();  /** START **/ 
     bca:	0e 94 ed 00 	call	0x1da	; 0x1da <APP_startcardcomm>
		
	APP_getamount(); /** GET NEEDED MONEY **/
     bce:	0e 94 60 01 	call	0x2c0	; 0x2c0 <APP_getamount>
	
	APP_cardvalidate(); /** VALIDATE THE CARD **/
     bd2:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <APP_cardvalidate>
	
}
     bd6:	80 e0       	ldi	r24, 0x00	; 0
     bd8:	90 e0       	ldi	r25, 0x00	; 0
     bda:	08 95       	ret

00000bdc <DIO_setpindir>:
     bdc:	44 23       	and	r20, r20
     bde:	19 f0       	breq	.+6      	; 0xbe6 <DIO_setpindir+0xa>
     be0:	41 30       	cpi	r20, 0x01	; 1
     be2:	e9 f1       	breq	.+122    	; 0xc5e <DIO_setpindir+0x82>
     be4:	74 c0       	rjmp	.+232    	; 0xcce <DIO_setpindir+0xf2>
     be6:	81 30       	cpi	r24, 0x01	; 1
     be8:	99 f0       	breq	.+38     	; 0xc10 <DIO_setpindir+0x34>
     bea:	28 f0       	brcs	.+10     	; 0xbf6 <DIO_setpindir+0x1a>
     bec:	82 30       	cpi	r24, 0x02	; 2
     bee:	e9 f0       	breq	.+58     	; 0xc2a <DIO_setpindir+0x4e>
     bf0:	83 30       	cpi	r24, 0x03	; 3
     bf2:	41 f1       	breq	.+80     	; 0xc44 <DIO_setpindir+0x68>
     bf4:	6e c0       	rjmp	.+220    	; 0xcd2 <DIO_setpindir+0xf6>
     bf6:	2a b3       	in	r18, 0x1a	; 26
     bf8:	81 e0       	ldi	r24, 0x01	; 1
     bfa:	90 e0       	ldi	r25, 0x00	; 0
     bfc:	02 c0       	rjmp	.+4      	; 0xc02 <DIO_setpindir+0x26>
     bfe:	88 0f       	add	r24, r24
     c00:	99 1f       	adc	r25, r25
     c02:	6a 95       	dec	r22
     c04:	e2 f7       	brpl	.-8      	; 0xbfe <DIO_setpindir+0x22>
     c06:	80 95       	com	r24
     c08:	82 23       	and	r24, r18
     c0a:	8a bb       	out	0x1a, r24	; 26
     c0c:	80 e0       	ldi	r24, 0x00	; 0
     c0e:	08 95       	ret
     c10:	27 b3       	in	r18, 0x17	; 23
     c12:	81 e0       	ldi	r24, 0x01	; 1
     c14:	90 e0       	ldi	r25, 0x00	; 0
     c16:	02 c0       	rjmp	.+4      	; 0xc1c <DIO_setpindir+0x40>
     c18:	88 0f       	add	r24, r24
     c1a:	99 1f       	adc	r25, r25
     c1c:	6a 95       	dec	r22
     c1e:	e2 f7       	brpl	.-8      	; 0xc18 <DIO_setpindir+0x3c>
     c20:	80 95       	com	r24
     c22:	82 23       	and	r24, r18
     c24:	87 bb       	out	0x17, r24	; 23
     c26:	80 e0       	ldi	r24, 0x00	; 0
     c28:	08 95       	ret
     c2a:	24 b3       	in	r18, 0x14	; 20
     c2c:	81 e0       	ldi	r24, 0x01	; 1
     c2e:	90 e0       	ldi	r25, 0x00	; 0
     c30:	02 c0       	rjmp	.+4      	; 0xc36 <DIO_setpindir+0x5a>
     c32:	88 0f       	add	r24, r24
     c34:	99 1f       	adc	r25, r25
     c36:	6a 95       	dec	r22
     c38:	e2 f7       	brpl	.-8      	; 0xc32 <DIO_setpindir+0x56>
     c3a:	80 95       	com	r24
     c3c:	82 23       	and	r24, r18
     c3e:	84 bb       	out	0x14, r24	; 20
     c40:	80 e0       	ldi	r24, 0x00	; 0
     c42:	08 95       	ret
     c44:	21 b3       	in	r18, 0x11	; 17
     c46:	81 e0       	ldi	r24, 0x01	; 1
     c48:	90 e0       	ldi	r25, 0x00	; 0
     c4a:	02 c0       	rjmp	.+4      	; 0xc50 <DIO_setpindir+0x74>
     c4c:	88 0f       	add	r24, r24
     c4e:	99 1f       	adc	r25, r25
     c50:	6a 95       	dec	r22
     c52:	e2 f7       	brpl	.-8      	; 0xc4c <DIO_setpindir+0x70>
     c54:	80 95       	com	r24
     c56:	82 23       	and	r24, r18
     c58:	81 bb       	out	0x11, r24	; 17
     c5a:	80 e0       	ldi	r24, 0x00	; 0
     c5c:	08 95       	ret
     c5e:	81 30       	cpi	r24, 0x01	; 1
     c60:	91 f0       	breq	.+36     	; 0xc86 <DIO_setpindir+0xaa>
     c62:	28 f0       	brcs	.+10     	; 0xc6e <DIO_setpindir+0x92>
     c64:	82 30       	cpi	r24, 0x02	; 2
     c66:	d9 f0       	breq	.+54     	; 0xc9e <DIO_setpindir+0xc2>
     c68:	83 30       	cpi	r24, 0x03	; 3
     c6a:	29 f1       	breq	.+74     	; 0xcb6 <DIO_setpindir+0xda>
     c6c:	34 c0       	rjmp	.+104    	; 0xcd6 <DIO_setpindir+0xfa>
     c6e:	2a b3       	in	r18, 0x1a	; 26
     c70:	81 e0       	ldi	r24, 0x01	; 1
     c72:	90 e0       	ldi	r25, 0x00	; 0
     c74:	02 c0       	rjmp	.+4      	; 0xc7a <DIO_setpindir+0x9e>
     c76:	88 0f       	add	r24, r24
     c78:	99 1f       	adc	r25, r25
     c7a:	6a 95       	dec	r22
     c7c:	e2 f7       	brpl	.-8      	; 0xc76 <DIO_setpindir+0x9a>
     c7e:	82 2b       	or	r24, r18
     c80:	8a bb       	out	0x1a, r24	; 26
     c82:	80 e0       	ldi	r24, 0x00	; 0
     c84:	08 95       	ret
     c86:	27 b3       	in	r18, 0x17	; 23
     c88:	81 e0       	ldi	r24, 0x01	; 1
     c8a:	90 e0       	ldi	r25, 0x00	; 0
     c8c:	02 c0       	rjmp	.+4      	; 0xc92 <DIO_setpindir+0xb6>
     c8e:	88 0f       	add	r24, r24
     c90:	99 1f       	adc	r25, r25
     c92:	6a 95       	dec	r22
     c94:	e2 f7       	brpl	.-8      	; 0xc8e <DIO_setpindir+0xb2>
     c96:	82 2b       	or	r24, r18
     c98:	87 bb       	out	0x17, r24	; 23
     c9a:	80 e0       	ldi	r24, 0x00	; 0
     c9c:	08 95       	ret
     c9e:	24 b3       	in	r18, 0x14	; 20
     ca0:	81 e0       	ldi	r24, 0x01	; 1
     ca2:	90 e0       	ldi	r25, 0x00	; 0
     ca4:	02 c0       	rjmp	.+4      	; 0xcaa <DIO_setpindir+0xce>
     ca6:	88 0f       	add	r24, r24
     ca8:	99 1f       	adc	r25, r25
     caa:	6a 95       	dec	r22
     cac:	e2 f7       	brpl	.-8      	; 0xca6 <DIO_setpindir+0xca>
     cae:	82 2b       	or	r24, r18
     cb0:	84 bb       	out	0x14, r24	; 20
     cb2:	80 e0       	ldi	r24, 0x00	; 0
     cb4:	08 95       	ret
     cb6:	21 b3       	in	r18, 0x11	; 17
     cb8:	81 e0       	ldi	r24, 0x01	; 1
     cba:	90 e0       	ldi	r25, 0x00	; 0
     cbc:	02 c0       	rjmp	.+4      	; 0xcc2 <DIO_setpindir+0xe6>
     cbe:	88 0f       	add	r24, r24
     cc0:	99 1f       	adc	r25, r25
     cc2:	6a 95       	dec	r22
     cc4:	e2 f7       	brpl	.-8      	; 0xcbe <DIO_setpindir+0xe2>
     cc6:	82 2b       	or	r24, r18
     cc8:	81 bb       	out	0x11, r24	; 17
     cca:	80 e0       	ldi	r24, 0x00	; 0
     ccc:	08 95       	ret
     cce:	81 e0       	ldi	r24, 0x01	; 1
     cd0:	08 95       	ret
     cd2:	81 e0       	ldi	r24, 0x01	; 1
     cd4:	08 95       	ret
     cd6:	81 e0       	ldi	r24, 0x01	; 1
     cd8:	08 95       	ret

00000cda <DIO_setpinvalue>:
     cda:	44 23       	and	r20, r20
     cdc:	19 f0       	breq	.+6      	; 0xce4 <DIO_setpinvalue+0xa>
     cde:	41 30       	cpi	r20, 0x01	; 1
     ce0:	e9 f1       	breq	.+122    	; 0xd5c <DIO_setpinvalue+0x82>
     ce2:	74 c0       	rjmp	.+232    	; 0xdcc <DIO_setpinvalue+0xf2>
     ce4:	81 30       	cpi	r24, 0x01	; 1
     ce6:	99 f0       	breq	.+38     	; 0xd0e <DIO_setpinvalue+0x34>
     ce8:	28 f0       	brcs	.+10     	; 0xcf4 <DIO_setpinvalue+0x1a>
     cea:	82 30       	cpi	r24, 0x02	; 2
     cec:	e9 f0       	breq	.+58     	; 0xd28 <DIO_setpinvalue+0x4e>
     cee:	83 30       	cpi	r24, 0x03	; 3
     cf0:	41 f1       	breq	.+80     	; 0xd42 <DIO_setpinvalue+0x68>
     cf2:	6e c0       	rjmp	.+220    	; 0xdd0 <DIO_setpinvalue+0xf6>
     cf4:	2b b3       	in	r18, 0x1b	; 27
     cf6:	81 e0       	ldi	r24, 0x01	; 1
     cf8:	90 e0       	ldi	r25, 0x00	; 0
     cfa:	02 c0       	rjmp	.+4      	; 0xd00 <DIO_setpinvalue+0x26>
     cfc:	88 0f       	add	r24, r24
     cfe:	99 1f       	adc	r25, r25
     d00:	6a 95       	dec	r22
     d02:	e2 f7       	brpl	.-8      	; 0xcfc <DIO_setpinvalue+0x22>
     d04:	80 95       	com	r24
     d06:	82 23       	and	r24, r18
     d08:	8b bb       	out	0x1b, r24	; 27
     d0a:	80 e0       	ldi	r24, 0x00	; 0
     d0c:	08 95       	ret
     d0e:	28 b3       	in	r18, 0x18	; 24
     d10:	81 e0       	ldi	r24, 0x01	; 1
     d12:	90 e0       	ldi	r25, 0x00	; 0
     d14:	02 c0       	rjmp	.+4      	; 0xd1a <DIO_setpinvalue+0x40>
     d16:	88 0f       	add	r24, r24
     d18:	99 1f       	adc	r25, r25
     d1a:	6a 95       	dec	r22
     d1c:	e2 f7       	brpl	.-8      	; 0xd16 <DIO_setpinvalue+0x3c>
     d1e:	80 95       	com	r24
     d20:	82 23       	and	r24, r18
     d22:	88 bb       	out	0x18, r24	; 24
     d24:	80 e0       	ldi	r24, 0x00	; 0
     d26:	08 95       	ret
     d28:	25 b3       	in	r18, 0x15	; 21
     d2a:	81 e0       	ldi	r24, 0x01	; 1
     d2c:	90 e0       	ldi	r25, 0x00	; 0
     d2e:	02 c0       	rjmp	.+4      	; 0xd34 <DIO_setpinvalue+0x5a>
     d30:	88 0f       	add	r24, r24
     d32:	99 1f       	adc	r25, r25
     d34:	6a 95       	dec	r22
     d36:	e2 f7       	brpl	.-8      	; 0xd30 <DIO_setpinvalue+0x56>
     d38:	80 95       	com	r24
     d3a:	82 23       	and	r24, r18
     d3c:	85 bb       	out	0x15, r24	; 21
     d3e:	80 e0       	ldi	r24, 0x00	; 0
     d40:	08 95       	ret
     d42:	22 b3       	in	r18, 0x12	; 18
     d44:	81 e0       	ldi	r24, 0x01	; 1
     d46:	90 e0       	ldi	r25, 0x00	; 0
     d48:	02 c0       	rjmp	.+4      	; 0xd4e <DIO_setpinvalue+0x74>
     d4a:	88 0f       	add	r24, r24
     d4c:	99 1f       	adc	r25, r25
     d4e:	6a 95       	dec	r22
     d50:	e2 f7       	brpl	.-8      	; 0xd4a <DIO_setpinvalue+0x70>
     d52:	80 95       	com	r24
     d54:	82 23       	and	r24, r18
     d56:	82 bb       	out	0x12, r24	; 18
     d58:	80 e0       	ldi	r24, 0x00	; 0
     d5a:	08 95       	ret
     d5c:	81 30       	cpi	r24, 0x01	; 1
     d5e:	91 f0       	breq	.+36     	; 0xd84 <DIO_setpinvalue+0xaa>
     d60:	28 f0       	brcs	.+10     	; 0xd6c <DIO_setpinvalue+0x92>
     d62:	82 30       	cpi	r24, 0x02	; 2
     d64:	d9 f0       	breq	.+54     	; 0xd9c <DIO_setpinvalue+0xc2>
     d66:	83 30       	cpi	r24, 0x03	; 3
     d68:	29 f1       	breq	.+74     	; 0xdb4 <DIO_setpinvalue+0xda>
     d6a:	34 c0       	rjmp	.+104    	; 0xdd4 <DIO_setpinvalue+0xfa>
     d6c:	2b b3       	in	r18, 0x1b	; 27
     d6e:	81 e0       	ldi	r24, 0x01	; 1
     d70:	90 e0       	ldi	r25, 0x00	; 0
     d72:	02 c0       	rjmp	.+4      	; 0xd78 <DIO_setpinvalue+0x9e>
     d74:	88 0f       	add	r24, r24
     d76:	99 1f       	adc	r25, r25
     d78:	6a 95       	dec	r22
     d7a:	e2 f7       	brpl	.-8      	; 0xd74 <DIO_setpinvalue+0x9a>
     d7c:	82 2b       	or	r24, r18
     d7e:	8b bb       	out	0x1b, r24	; 27
     d80:	80 e0       	ldi	r24, 0x00	; 0
     d82:	08 95       	ret
     d84:	28 b3       	in	r18, 0x18	; 24
     d86:	81 e0       	ldi	r24, 0x01	; 1
     d88:	90 e0       	ldi	r25, 0x00	; 0
     d8a:	02 c0       	rjmp	.+4      	; 0xd90 <DIO_setpinvalue+0xb6>
     d8c:	88 0f       	add	r24, r24
     d8e:	99 1f       	adc	r25, r25
     d90:	6a 95       	dec	r22
     d92:	e2 f7       	brpl	.-8      	; 0xd8c <DIO_setpinvalue+0xb2>
     d94:	82 2b       	or	r24, r18
     d96:	88 bb       	out	0x18, r24	; 24
     d98:	80 e0       	ldi	r24, 0x00	; 0
     d9a:	08 95       	ret
     d9c:	25 b3       	in	r18, 0x15	; 21
     d9e:	81 e0       	ldi	r24, 0x01	; 1
     da0:	90 e0       	ldi	r25, 0x00	; 0
     da2:	02 c0       	rjmp	.+4      	; 0xda8 <DIO_setpinvalue+0xce>
     da4:	88 0f       	add	r24, r24
     da6:	99 1f       	adc	r25, r25
     da8:	6a 95       	dec	r22
     daa:	e2 f7       	brpl	.-8      	; 0xda4 <DIO_setpinvalue+0xca>
     dac:	82 2b       	or	r24, r18
     dae:	85 bb       	out	0x15, r24	; 21
     db0:	80 e0       	ldi	r24, 0x00	; 0
     db2:	08 95       	ret
     db4:	22 b3       	in	r18, 0x12	; 18
     db6:	81 e0       	ldi	r24, 0x01	; 1
     db8:	90 e0       	ldi	r25, 0x00	; 0
     dba:	02 c0       	rjmp	.+4      	; 0xdc0 <DIO_setpinvalue+0xe6>
     dbc:	88 0f       	add	r24, r24
     dbe:	99 1f       	adc	r25, r25
     dc0:	6a 95       	dec	r22
     dc2:	e2 f7       	brpl	.-8      	; 0xdbc <DIO_setpinvalue+0xe2>
     dc4:	82 2b       	or	r24, r18
     dc6:	82 bb       	out	0x12, r24	; 18
     dc8:	80 e0       	ldi	r24, 0x00	; 0
     dca:	08 95       	ret
     dcc:	81 e0       	ldi	r24, 0x01	; 1
     dce:	08 95       	ret
     dd0:	81 e0       	ldi	r24, 0x01	; 1
     dd2:	08 95       	ret
     dd4:	81 e0       	ldi	r24, 0x01	; 1
     dd6:	08 95       	ret

00000dd8 <DIO_readpin>:
     dd8:	81 30       	cpi	r24, 0x01	; 1
     dda:	99 f0       	breq	.+38     	; 0xe02 <DIO_readpin+0x2a>
     ddc:	28 f0       	brcs	.+10     	; 0xde8 <DIO_readpin+0x10>
     dde:	82 30       	cpi	r24, 0x02	; 2
     de0:	e9 f0       	breq	.+58     	; 0xe1c <DIO_readpin+0x44>
     de2:	83 30       	cpi	r24, 0x03	; 3
     de4:	41 f1       	breq	.+80     	; 0xe36 <DIO_readpin+0x5e>
     de6:	34 c0       	rjmp	.+104    	; 0xe50 <DIO_readpin+0x78>
     de8:	89 b3       	in	r24, 0x19	; 25
     dea:	90 e0       	ldi	r25, 0x00	; 0
     dec:	02 c0       	rjmp	.+4      	; 0xdf2 <DIO_readpin+0x1a>
     dee:	95 95       	asr	r25
     df0:	87 95       	ror	r24
     df2:	6a 95       	dec	r22
     df4:	e2 f7       	brpl	.-8      	; 0xdee <DIO_readpin+0x16>
     df6:	81 70       	andi	r24, 0x01	; 1
     df8:	89 bb       	out	0x19, r24	; 25
     dfa:	fa 01       	movw	r30, r20
     dfc:	80 83       	st	Z, r24
     dfe:	80 e0       	ldi	r24, 0x00	; 0
     e00:	08 95       	ret
     e02:	86 b3       	in	r24, 0x16	; 22
     e04:	90 e0       	ldi	r25, 0x00	; 0
     e06:	02 c0       	rjmp	.+4      	; 0xe0c <DIO_readpin+0x34>
     e08:	95 95       	asr	r25
     e0a:	87 95       	ror	r24
     e0c:	6a 95       	dec	r22
     e0e:	e2 f7       	brpl	.-8      	; 0xe08 <DIO_readpin+0x30>
     e10:	81 70       	andi	r24, 0x01	; 1
     e12:	86 bb       	out	0x16, r24	; 22
     e14:	fa 01       	movw	r30, r20
     e16:	80 83       	st	Z, r24
     e18:	80 e0       	ldi	r24, 0x00	; 0
     e1a:	08 95       	ret
     e1c:	83 b3       	in	r24, 0x13	; 19
     e1e:	90 e0       	ldi	r25, 0x00	; 0
     e20:	02 c0       	rjmp	.+4      	; 0xe26 <DIO_readpin+0x4e>
     e22:	95 95       	asr	r25
     e24:	87 95       	ror	r24
     e26:	6a 95       	dec	r22
     e28:	e2 f7       	brpl	.-8      	; 0xe22 <DIO_readpin+0x4a>
     e2a:	81 70       	andi	r24, 0x01	; 1
     e2c:	83 bb       	out	0x13, r24	; 19
     e2e:	fa 01       	movw	r30, r20
     e30:	80 83       	st	Z, r24
     e32:	80 e0       	ldi	r24, 0x00	; 0
     e34:	08 95       	ret
     e36:	80 b3       	in	r24, 0x10	; 16
     e38:	90 e0       	ldi	r25, 0x00	; 0
     e3a:	02 c0       	rjmp	.+4      	; 0xe40 <DIO_readpin+0x68>
     e3c:	95 95       	asr	r25
     e3e:	87 95       	ror	r24
     e40:	6a 95       	dec	r22
     e42:	e2 f7       	brpl	.-8      	; 0xe3c <DIO_readpin+0x64>
     e44:	81 70       	andi	r24, 0x01	; 1
     e46:	80 bb       	out	0x10, r24	; 16
     e48:	fa 01       	movw	r30, r20
     e4a:	80 83       	st	Z, r24
     e4c:	80 e0       	ldi	r24, 0x00	; 0
     e4e:	08 95       	ret
     e50:	81 e0       	ldi	r24, 0x01	; 1
     e52:	08 95       	ret

00000e54 <DIO_togglepin>:
     e54:	81 30       	cpi	r24, 0x01	; 1
     e56:	91 f0       	breq	.+36     	; 0xe7c <DIO_togglepin+0x28>
     e58:	28 f0       	brcs	.+10     	; 0xe64 <DIO_togglepin+0x10>
     e5a:	82 30       	cpi	r24, 0x02	; 2
     e5c:	d9 f0       	breq	.+54     	; 0xe94 <DIO_togglepin+0x40>
     e5e:	83 30       	cpi	r24, 0x03	; 3
     e60:	29 f1       	breq	.+74     	; 0xeac <DIO_togglepin+0x58>
     e62:	30 c0       	rjmp	.+96     	; 0xec4 <DIO_togglepin+0x70>
     e64:	2b b3       	in	r18, 0x1b	; 27
     e66:	81 e0       	ldi	r24, 0x01	; 1
     e68:	90 e0       	ldi	r25, 0x00	; 0
     e6a:	02 c0       	rjmp	.+4      	; 0xe70 <DIO_togglepin+0x1c>
     e6c:	88 0f       	add	r24, r24
     e6e:	99 1f       	adc	r25, r25
     e70:	6a 95       	dec	r22
     e72:	e2 f7       	brpl	.-8      	; 0xe6c <DIO_togglepin+0x18>
     e74:	82 27       	eor	r24, r18
     e76:	8b bb       	out	0x1b, r24	; 27
     e78:	80 e0       	ldi	r24, 0x00	; 0
     e7a:	08 95       	ret
     e7c:	28 b3       	in	r18, 0x18	; 24
     e7e:	81 e0       	ldi	r24, 0x01	; 1
     e80:	90 e0       	ldi	r25, 0x00	; 0
     e82:	02 c0       	rjmp	.+4      	; 0xe88 <DIO_togglepin+0x34>
     e84:	88 0f       	add	r24, r24
     e86:	99 1f       	adc	r25, r25
     e88:	6a 95       	dec	r22
     e8a:	e2 f7       	brpl	.-8      	; 0xe84 <DIO_togglepin+0x30>
     e8c:	82 27       	eor	r24, r18
     e8e:	88 bb       	out	0x18, r24	; 24
     e90:	80 e0       	ldi	r24, 0x00	; 0
     e92:	08 95       	ret
     e94:	25 b3       	in	r18, 0x15	; 21
     e96:	81 e0       	ldi	r24, 0x01	; 1
     e98:	90 e0       	ldi	r25, 0x00	; 0
     e9a:	02 c0       	rjmp	.+4      	; 0xea0 <DIO_togglepin+0x4c>
     e9c:	88 0f       	add	r24, r24
     e9e:	99 1f       	adc	r25, r25
     ea0:	6a 95       	dec	r22
     ea2:	e2 f7       	brpl	.-8      	; 0xe9c <DIO_togglepin+0x48>
     ea4:	82 27       	eor	r24, r18
     ea6:	85 bb       	out	0x15, r24	; 21
     ea8:	80 e0       	ldi	r24, 0x00	; 0
     eaa:	08 95       	ret
     eac:	22 b3       	in	r18, 0x12	; 18
     eae:	81 e0       	ldi	r24, 0x01	; 1
     eb0:	90 e0       	ldi	r25, 0x00	; 0
     eb2:	02 c0       	rjmp	.+4      	; 0xeb8 <DIO_togglepin+0x64>
     eb4:	88 0f       	add	r24, r24
     eb6:	99 1f       	adc	r25, r25
     eb8:	6a 95       	dec	r22
     eba:	e2 f7       	brpl	.-8      	; 0xeb4 <DIO_togglepin+0x60>
     ebc:	82 27       	eor	r24, r18
     ebe:	82 bb       	out	0x12, r24	; 18
     ec0:	80 e0       	ldi	r24, 0x00	; 0
     ec2:	08 95       	ret
     ec4:	81 e0       	ldi	r24, 0x01	; 1
     ec6:	08 95       	ret

00000ec8 <SPI_initslave>:
     ec8:	40 e0       	ldi	r20, 0x00	; 0
     eca:	64 e0       	ldi	r22, 0x04	; 4
     ecc:	81 e0       	ldi	r24, 0x01	; 1
     ece:	0e 94 ee 05 	call	0xbdc	; 0xbdc <DIO_setpindir>
     ed2:	40 e0       	ldi	r20, 0x00	; 0
     ed4:	65 e0       	ldi	r22, 0x05	; 5
     ed6:	81 e0       	ldi	r24, 0x01	; 1
     ed8:	0e 94 ee 05 	call	0xbdc	; 0xbdc <DIO_setpindir>
     edc:	41 e0       	ldi	r20, 0x01	; 1
     ede:	66 e0       	ldi	r22, 0x06	; 6
     ee0:	81 e0       	ldi	r24, 0x01	; 1
     ee2:	0e 94 ee 05 	call	0xbdc	; 0xbdc <DIO_setpindir>
     ee6:	40 e0       	ldi	r20, 0x00	; 0
     ee8:	67 e0       	ldi	r22, 0x07	; 7
     eea:	81 e0       	ldi	r24, 0x01	; 1
     eec:	0e 94 ee 05 	call	0xbdc	; 0xbdc <DIO_setpindir>
     ef0:	8d b1       	in	r24, 0x0d	; 13
     ef2:	80 64       	ori	r24, 0x40	; 64
     ef4:	8d b9       	out	0x0d, r24	; 13
     ef6:	8d b1       	in	r24, 0x0d	; 13
     ef8:	8f 7e       	andi	r24, 0xEF	; 239
     efa:	8d b9       	out	0x0d, r24	; 13
     efc:	8d b1       	in	r24, 0x0d	; 13
     efe:	87 7f       	andi	r24, 0xF7	; 247
     f00:	8d b9       	out	0x0d, r24	; 13
     f02:	8d b1       	in	r24, 0x0d	; 13
     f04:	8b 7f       	andi	r24, 0xFB	; 251
     f06:	8d b9       	out	0x0d, r24	; 13
     f08:	08 95       	ret

00000f0a <SPI_receivebyte>:
     f0a:	77 9b       	sbis	0x0e, 7	; 14
     f0c:	fe cf       	rjmp	.-4      	; 0xf0a <SPI_receivebyte>
     f0e:	2f b1       	in	r18, 0x0f	; 15
     f10:	fc 01       	movw	r30, r24
     f12:	20 83       	st	Z, r18
     f14:	08 95       	ret

00000f16 <SPI_receivestring>:
     f16:	0f 93       	push	r16
     f18:	1f 93       	push	r17
     f1a:	cf 93       	push	r28
     f1c:	8c 01       	movw	r16, r24
     f1e:	c0 e0       	ldi	r28, 0x00	; 0
     f20:	03 c0       	rjmp	.+6      	; 0xf28 <SPI_receivestring+0x12>
     f22:	0e 94 85 07 	call	0xf0a	; 0xf0a <SPI_receivebyte>
     f26:	cf 5f       	subi	r28, 0xFF	; 255
     f28:	c8 01       	movw	r24, r16
     f2a:	8c 0f       	add	r24, r28
     f2c:	91 1d       	adc	r25, r1
     f2e:	fc 01       	movw	r30, r24
     f30:	20 81       	ld	r18, Z
     f32:	21 11       	cpse	r18, r1
     f34:	f6 cf       	rjmp	.-20     	; 0xf22 <SPI_receivestring+0xc>
     f36:	10 82       	st	Z, r1
     f38:	cf 91       	pop	r28
     f3a:	1f 91       	pop	r17
     f3c:	0f 91       	pop	r16
     f3e:	08 95       	ret

00000f40 <TMR0_init>:
     f40:	83 b7       	in	r24, 0x33	; 51
     f42:	8f 77       	andi	r24, 0x7F	; 127
     f44:	83 bf       	out	0x33, r24	; 51
     f46:	83 b7       	in	r24, 0x33	; 51
     f48:	8f 7b       	andi	r24, 0xBF	; 191
     f4a:	83 bf       	out	0x33, r24	; 51
     f4c:	83 b7       	in	r24, 0x33	; 51
     f4e:	87 7f       	andi	r24, 0xF7	; 247
     f50:	83 bf       	out	0x33, r24	; 51
     f52:	83 b7       	in	r24, 0x33	; 51
     f54:	8f 7e       	andi	r24, 0xEF	; 239
     f56:	83 bf       	out	0x33, r24	; 51
     f58:	83 b7       	in	r24, 0x33	; 51
     f5a:	8f 7d       	andi	r24, 0xDF	; 223
     f5c:	83 bf       	out	0x33, r24	; 51
     f5e:	80 e0       	ldi	r24, 0x00	; 0
     f60:	08 95       	ret

00000f62 <TMR0_start>:
     f62:	83 b7       	in	r24, 0x33	; 51
     f64:	81 60       	ori	r24, 0x01	; 1
     f66:	83 bf       	out	0x33, r24	; 51
     f68:	83 b7       	in	r24, 0x33	; 51
     f6a:	8d 7f       	andi	r24, 0xFD	; 253
     f6c:	83 bf       	out	0x33, r24	; 51
     f6e:	83 b7       	in	r24, 0x33	; 51
     f70:	84 60       	ori	r24, 0x04	; 4
     f72:	83 bf       	out	0x33, r24	; 51
     f74:	80 e0       	ldi	r24, 0x00	; 0
     f76:	08 95       	ret

00000f78 <TMR0_stop>:
     f78:	83 b7       	in	r24, 0x33	; 51
     f7a:	8e 7f       	andi	r24, 0xFE	; 254
     f7c:	83 bf       	out	0x33, r24	; 51
     f7e:	83 b7       	in	r24, 0x33	; 51
     f80:	8d 7f       	andi	r24, 0xFD	; 253
     f82:	83 bf       	out	0x33, r24	; 51
     f84:	83 b7       	in	r24, 0x33	; 51
     f86:	8b 7f       	andi	r24, 0xFB	; 251
     f88:	83 bf       	out	0x33, r24	; 51
     f8a:	80 e0       	ldi	r24, 0x00	; 0
     f8c:	08 95       	ret

00000f8e <TMR0_delayms>:
     f8e:	0e 94 1d 09 	call	0x123a	; 0x123a <__floatunsisf>
     f92:	2f e6       	ldi	r18, 0x6F	; 111
     f94:	32 e1       	ldi	r19, 0x12	; 18
     f96:	43 e8       	ldi	r20, 0x83	; 131
     f98:	51 e4       	ldi	r21, 0x41	; 65
     f9a:	0e 94 75 08 	call	0x10ea	; 0x10ea <__divsf3>
     f9e:	0e 94 ee 08 	call	0x11dc	; 0x11dc <__fixunssfsi>
     fa2:	60 93 b4 01 	sts	0x01B4, r22	; 0x8001b4 <u32_gs_tmr0nuofovs>
     fa6:	70 93 b5 01 	sts	0x01B5, r23	; 0x8001b5 <u32_gs_tmr0nuofovs+0x1>
     faa:	80 93 b6 01 	sts	0x01B6, r24	; 0x8001b6 <u32_gs_tmr0nuofovs+0x2>
     fae:	90 93 b7 01 	sts	0x01B7, r25	; 0x8001b7 <u32_gs_tmr0nuofovs+0x3>
     fb2:	12 be       	out	0x32, r1	; 50
     fb4:	0e 94 b1 07 	call	0xf62	; 0xf62 <TMR0_start>
     fb8:	40 e0       	ldi	r20, 0x00	; 0
     fba:	50 e0       	ldi	r21, 0x00	; 0
     fbc:	ba 01       	movw	r22, r20
     fbe:	0a c0       	rjmp	.+20     	; 0xfd4 <TMR0_delayms+0x46>
     fc0:	08 b6       	in	r0, 0x38	; 56
     fc2:	00 fe       	sbrs	r0, 0
     fc4:	fd cf       	rjmp	.-6      	; 0xfc0 <TMR0_delayms+0x32>
     fc6:	88 b7       	in	r24, 0x38	; 56
     fc8:	81 60       	ori	r24, 0x01	; 1
     fca:	88 bf       	out	0x38, r24	; 56
     fcc:	4f 5f       	subi	r20, 0xFF	; 255
     fce:	5f 4f       	sbci	r21, 0xFF	; 255
     fd0:	6f 4f       	sbci	r22, 0xFF	; 255
     fd2:	7f 4f       	sbci	r23, 0xFF	; 255
     fd4:	80 91 b4 01 	lds	r24, 0x01B4	; 0x8001b4 <u32_gs_tmr0nuofovs>
     fd8:	90 91 b5 01 	lds	r25, 0x01B5	; 0x8001b5 <u32_gs_tmr0nuofovs+0x1>
     fdc:	a0 91 b6 01 	lds	r26, 0x01B6	; 0x8001b6 <u32_gs_tmr0nuofovs+0x2>
     fe0:	b0 91 b7 01 	lds	r27, 0x01B7	; 0x8001b7 <u32_gs_tmr0nuofovs+0x3>
     fe4:	48 17       	cp	r20, r24
     fe6:	59 07       	cpc	r21, r25
     fe8:	6a 07       	cpc	r22, r26
     fea:	7b 07       	cpc	r23, r27
     fec:	48 f3       	brcs	.-46     	; 0xfc0 <TMR0_delayms+0x32>
     fee:	10 92 b4 01 	sts	0x01B4, r1	; 0x8001b4 <u32_gs_tmr0nuofovs>
     ff2:	10 92 b5 01 	sts	0x01B5, r1	; 0x8001b5 <u32_gs_tmr0nuofovs+0x1>
     ff6:	10 92 b6 01 	sts	0x01B6, r1	; 0x8001b6 <u32_gs_tmr0nuofovs+0x2>
     ffa:	10 92 b7 01 	sts	0x01B7, r1	; 0x8001b7 <u32_gs_tmr0nuofovs+0x3>
     ffe:	0e 94 bc 07 	call	0xf78	; 0xf78 <TMR0_stop>
    1002:	80 e0       	ldi	r24, 0x00	; 0
    1004:	08 95       	ret

00001006 <__subsf3>:
    1006:	50 58       	subi	r21, 0x80	; 128

00001008 <__addsf3>:
    1008:	bb 27       	eor	r27, r27
    100a:	aa 27       	eor	r26, r26
    100c:	0e 94 1b 08 	call	0x1036	; 0x1036 <__addsf3x>
    1010:	0c 94 95 09 	jmp	0x132a	; 0x132a <__fp_round>
    1014:	0e 94 87 09 	call	0x130e	; 0x130e <__fp_pscA>
    1018:	38 f0       	brcs	.+14     	; 0x1028 <__addsf3+0x20>
    101a:	0e 94 8e 09 	call	0x131c	; 0x131c <__fp_pscB>
    101e:	20 f0       	brcs	.+8      	; 0x1028 <__addsf3+0x20>
    1020:	39 f4       	brne	.+14     	; 0x1030 <__addsf3+0x28>
    1022:	9f 3f       	cpi	r25, 0xFF	; 255
    1024:	19 f4       	brne	.+6      	; 0x102c <__addsf3+0x24>
    1026:	26 f4       	brtc	.+8      	; 0x1030 <__addsf3+0x28>
    1028:	0c 94 84 09 	jmp	0x1308	; 0x1308 <__fp_nan>
    102c:	0e f4       	brtc	.+2      	; 0x1030 <__addsf3+0x28>
    102e:	e0 95       	com	r30
    1030:	e7 fb       	bst	r30, 7
    1032:	0c 94 7e 09 	jmp	0x12fc	; 0x12fc <__fp_inf>

00001036 <__addsf3x>:
    1036:	e9 2f       	mov	r30, r25
    1038:	0e 94 a6 09 	call	0x134c	; 0x134c <__fp_split3>
    103c:	58 f3       	brcs	.-42     	; 0x1014 <__addsf3+0xc>
    103e:	ba 17       	cp	r27, r26
    1040:	62 07       	cpc	r22, r18
    1042:	73 07       	cpc	r23, r19
    1044:	84 07       	cpc	r24, r20
    1046:	95 07       	cpc	r25, r21
    1048:	20 f0       	brcs	.+8      	; 0x1052 <__addsf3x+0x1c>
    104a:	79 f4       	brne	.+30     	; 0x106a <__addsf3x+0x34>
    104c:	a6 f5       	brtc	.+104    	; 0x10b6 <__addsf3x+0x80>
    104e:	0c 94 c8 09 	jmp	0x1390	; 0x1390 <__fp_zero>
    1052:	0e f4       	brtc	.+2      	; 0x1056 <__addsf3x+0x20>
    1054:	e0 95       	com	r30
    1056:	0b 2e       	mov	r0, r27
    1058:	ba 2f       	mov	r27, r26
    105a:	a0 2d       	mov	r26, r0
    105c:	0b 01       	movw	r0, r22
    105e:	b9 01       	movw	r22, r18
    1060:	90 01       	movw	r18, r0
    1062:	0c 01       	movw	r0, r24
    1064:	ca 01       	movw	r24, r20
    1066:	a0 01       	movw	r20, r0
    1068:	11 24       	eor	r1, r1
    106a:	ff 27       	eor	r31, r31
    106c:	59 1b       	sub	r21, r25
    106e:	99 f0       	breq	.+38     	; 0x1096 <__addsf3x+0x60>
    1070:	59 3f       	cpi	r21, 0xF9	; 249
    1072:	50 f4       	brcc	.+20     	; 0x1088 <__addsf3x+0x52>
    1074:	50 3e       	cpi	r21, 0xE0	; 224
    1076:	68 f1       	brcs	.+90     	; 0x10d2 <__addsf3x+0x9c>
    1078:	1a 16       	cp	r1, r26
    107a:	f0 40       	sbci	r31, 0x00	; 0
    107c:	a2 2f       	mov	r26, r18
    107e:	23 2f       	mov	r18, r19
    1080:	34 2f       	mov	r19, r20
    1082:	44 27       	eor	r20, r20
    1084:	58 5f       	subi	r21, 0xF8	; 248
    1086:	f3 cf       	rjmp	.-26     	; 0x106e <__addsf3x+0x38>
    1088:	46 95       	lsr	r20
    108a:	37 95       	ror	r19
    108c:	27 95       	ror	r18
    108e:	a7 95       	ror	r26
    1090:	f0 40       	sbci	r31, 0x00	; 0
    1092:	53 95       	inc	r21
    1094:	c9 f7       	brne	.-14     	; 0x1088 <__addsf3x+0x52>
    1096:	7e f4       	brtc	.+30     	; 0x10b6 <__addsf3x+0x80>
    1098:	1f 16       	cp	r1, r31
    109a:	ba 0b       	sbc	r27, r26
    109c:	62 0b       	sbc	r22, r18
    109e:	73 0b       	sbc	r23, r19
    10a0:	84 0b       	sbc	r24, r20
    10a2:	ba f0       	brmi	.+46     	; 0x10d2 <__addsf3x+0x9c>
    10a4:	91 50       	subi	r25, 0x01	; 1
    10a6:	a1 f0       	breq	.+40     	; 0x10d0 <__addsf3x+0x9a>
    10a8:	ff 0f       	add	r31, r31
    10aa:	bb 1f       	adc	r27, r27
    10ac:	66 1f       	adc	r22, r22
    10ae:	77 1f       	adc	r23, r23
    10b0:	88 1f       	adc	r24, r24
    10b2:	c2 f7       	brpl	.-16     	; 0x10a4 <__addsf3x+0x6e>
    10b4:	0e c0       	rjmp	.+28     	; 0x10d2 <__addsf3x+0x9c>
    10b6:	ba 0f       	add	r27, r26
    10b8:	62 1f       	adc	r22, r18
    10ba:	73 1f       	adc	r23, r19
    10bc:	84 1f       	adc	r24, r20
    10be:	48 f4       	brcc	.+18     	; 0x10d2 <__addsf3x+0x9c>
    10c0:	87 95       	ror	r24
    10c2:	77 95       	ror	r23
    10c4:	67 95       	ror	r22
    10c6:	b7 95       	ror	r27
    10c8:	f7 95       	ror	r31
    10ca:	9e 3f       	cpi	r25, 0xFE	; 254
    10cc:	08 f0       	brcs	.+2      	; 0x10d0 <__addsf3x+0x9a>
    10ce:	b0 cf       	rjmp	.-160    	; 0x1030 <__addsf3+0x28>
    10d0:	93 95       	inc	r25
    10d2:	88 0f       	add	r24, r24
    10d4:	08 f0       	brcs	.+2      	; 0x10d8 <__addsf3x+0xa2>
    10d6:	99 27       	eor	r25, r25
    10d8:	ee 0f       	add	r30, r30
    10da:	97 95       	ror	r25
    10dc:	87 95       	ror	r24
    10de:	08 95       	ret

000010e0 <__cmpsf2>:
    10e0:	0e 94 5a 09 	call	0x12b4	; 0x12b4 <__fp_cmp>
    10e4:	08 f4       	brcc	.+2      	; 0x10e8 <__cmpsf2+0x8>
    10e6:	81 e0       	ldi	r24, 0x01	; 1
    10e8:	08 95       	ret

000010ea <__divsf3>:
    10ea:	0e 94 89 08 	call	0x1112	; 0x1112 <__divsf3x>
    10ee:	0c 94 95 09 	jmp	0x132a	; 0x132a <__fp_round>
    10f2:	0e 94 8e 09 	call	0x131c	; 0x131c <__fp_pscB>
    10f6:	58 f0       	brcs	.+22     	; 0x110e <__divsf3+0x24>
    10f8:	0e 94 87 09 	call	0x130e	; 0x130e <__fp_pscA>
    10fc:	40 f0       	brcs	.+16     	; 0x110e <__divsf3+0x24>
    10fe:	29 f4       	brne	.+10     	; 0x110a <__divsf3+0x20>
    1100:	5f 3f       	cpi	r21, 0xFF	; 255
    1102:	29 f0       	breq	.+10     	; 0x110e <__divsf3+0x24>
    1104:	0c 94 7e 09 	jmp	0x12fc	; 0x12fc <__fp_inf>
    1108:	51 11       	cpse	r21, r1
    110a:	0c 94 c9 09 	jmp	0x1392	; 0x1392 <__fp_szero>
    110e:	0c 94 84 09 	jmp	0x1308	; 0x1308 <__fp_nan>

00001112 <__divsf3x>:
    1112:	0e 94 a6 09 	call	0x134c	; 0x134c <__fp_split3>
    1116:	68 f3       	brcs	.-38     	; 0x10f2 <__divsf3+0x8>

00001118 <__divsf3_pse>:
    1118:	99 23       	and	r25, r25
    111a:	b1 f3       	breq	.-20     	; 0x1108 <__divsf3+0x1e>
    111c:	55 23       	and	r21, r21
    111e:	91 f3       	breq	.-28     	; 0x1104 <__divsf3+0x1a>
    1120:	95 1b       	sub	r25, r21
    1122:	55 0b       	sbc	r21, r21
    1124:	bb 27       	eor	r27, r27
    1126:	aa 27       	eor	r26, r26
    1128:	62 17       	cp	r22, r18
    112a:	73 07       	cpc	r23, r19
    112c:	84 07       	cpc	r24, r20
    112e:	38 f0       	brcs	.+14     	; 0x113e <__divsf3_pse+0x26>
    1130:	9f 5f       	subi	r25, 0xFF	; 255
    1132:	5f 4f       	sbci	r21, 0xFF	; 255
    1134:	22 0f       	add	r18, r18
    1136:	33 1f       	adc	r19, r19
    1138:	44 1f       	adc	r20, r20
    113a:	aa 1f       	adc	r26, r26
    113c:	a9 f3       	breq	.-22     	; 0x1128 <__divsf3_pse+0x10>
    113e:	35 d0       	rcall	.+106    	; 0x11aa <__divsf3_pse+0x92>
    1140:	0e 2e       	mov	r0, r30
    1142:	3a f0       	brmi	.+14     	; 0x1152 <__divsf3_pse+0x3a>
    1144:	e0 e8       	ldi	r30, 0x80	; 128
    1146:	32 d0       	rcall	.+100    	; 0x11ac <__divsf3_pse+0x94>
    1148:	91 50       	subi	r25, 0x01	; 1
    114a:	50 40       	sbci	r21, 0x00	; 0
    114c:	e6 95       	lsr	r30
    114e:	00 1c       	adc	r0, r0
    1150:	ca f7       	brpl	.-14     	; 0x1144 <__divsf3_pse+0x2c>
    1152:	2b d0       	rcall	.+86     	; 0x11aa <__divsf3_pse+0x92>
    1154:	fe 2f       	mov	r31, r30
    1156:	29 d0       	rcall	.+82     	; 0x11aa <__divsf3_pse+0x92>
    1158:	66 0f       	add	r22, r22
    115a:	77 1f       	adc	r23, r23
    115c:	88 1f       	adc	r24, r24
    115e:	bb 1f       	adc	r27, r27
    1160:	26 17       	cp	r18, r22
    1162:	37 07       	cpc	r19, r23
    1164:	48 07       	cpc	r20, r24
    1166:	ab 07       	cpc	r26, r27
    1168:	b0 e8       	ldi	r27, 0x80	; 128
    116a:	09 f0       	breq	.+2      	; 0x116e <__divsf3_pse+0x56>
    116c:	bb 0b       	sbc	r27, r27
    116e:	80 2d       	mov	r24, r0
    1170:	bf 01       	movw	r22, r30
    1172:	ff 27       	eor	r31, r31
    1174:	93 58       	subi	r25, 0x83	; 131
    1176:	5f 4f       	sbci	r21, 0xFF	; 255
    1178:	3a f0       	brmi	.+14     	; 0x1188 <__divsf3_pse+0x70>
    117a:	9e 3f       	cpi	r25, 0xFE	; 254
    117c:	51 05       	cpc	r21, r1
    117e:	78 f0       	brcs	.+30     	; 0x119e <__divsf3_pse+0x86>
    1180:	0c 94 7e 09 	jmp	0x12fc	; 0x12fc <__fp_inf>
    1184:	0c 94 c9 09 	jmp	0x1392	; 0x1392 <__fp_szero>
    1188:	5f 3f       	cpi	r21, 0xFF	; 255
    118a:	e4 f3       	brlt	.-8      	; 0x1184 <__divsf3_pse+0x6c>
    118c:	98 3e       	cpi	r25, 0xE8	; 232
    118e:	d4 f3       	brlt	.-12     	; 0x1184 <__divsf3_pse+0x6c>
    1190:	86 95       	lsr	r24
    1192:	77 95       	ror	r23
    1194:	67 95       	ror	r22
    1196:	b7 95       	ror	r27
    1198:	f7 95       	ror	r31
    119a:	9f 5f       	subi	r25, 0xFF	; 255
    119c:	c9 f7       	brne	.-14     	; 0x1190 <__divsf3_pse+0x78>
    119e:	88 0f       	add	r24, r24
    11a0:	91 1d       	adc	r25, r1
    11a2:	96 95       	lsr	r25
    11a4:	87 95       	ror	r24
    11a6:	97 f9       	bld	r25, 7
    11a8:	08 95       	ret
    11aa:	e1 e0       	ldi	r30, 0x01	; 1
    11ac:	66 0f       	add	r22, r22
    11ae:	77 1f       	adc	r23, r23
    11b0:	88 1f       	adc	r24, r24
    11b2:	bb 1f       	adc	r27, r27
    11b4:	62 17       	cp	r22, r18
    11b6:	73 07       	cpc	r23, r19
    11b8:	84 07       	cpc	r24, r20
    11ba:	ba 07       	cpc	r27, r26
    11bc:	20 f0       	brcs	.+8      	; 0x11c6 <__divsf3_pse+0xae>
    11be:	62 1b       	sub	r22, r18
    11c0:	73 0b       	sbc	r23, r19
    11c2:	84 0b       	sbc	r24, r20
    11c4:	ba 0b       	sbc	r27, r26
    11c6:	ee 1f       	adc	r30, r30
    11c8:	88 f7       	brcc	.-30     	; 0x11ac <__divsf3_pse+0x94>
    11ca:	e0 95       	com	r30
    11cc:	08 95       	ret

000011ce <__fixsfsi>:
    11ce:	0e 94 ee 08 	call	0x11dc	; 0x11dc <__fixunssfsi>
    11d2:	68 94       	set
    11d4:	b1 11       	cpse	r27, r1
    11d6:	0c 94 c9 09 	jmp	0x1392	; 0x1392 <__fp_szero>
    11da:	08 95       	ret

000011dc <__fixunssfsi>:
    11dc:	0e 94 ae 09 	call	0x135c	; 0x135c <__fp_splitA>
    11e0:	88 f0       	brcs	.+34     	; 0x1204 <__fixunssfsi+0x28>
    11e2:	9f 57       	subi	r25, 0x7F	; 127
    11e4:	98 f0       	brcs	.+38     	; 0x120c <__fixunssfsi+0x30>
    11e6:	b9 2f       	mov	r27, r25
    11e8:	99 27       	eor	r25, r25
    11ea:	b7 51       	subi	r27, 0x17	; 23
    11ec:	b0 f0       	brcs	.+44     	; 0x121a <__fixunssfsi+0x3e>
    11ee:	e1 f0       	breq	.+56     	; 0x1228 <__fixunssfsi+0x4c>
    11f0:	66 0f       	add	r22, r22
    11f2:	77 1f       	adc	r23, r23
    11f4:	88 1f       	adc	r24, r24
    11f6:	99 1f       	adc	r25, r25
    11f8:	1a f0       	brmi	.+6      	; 0x1200 <__fixunssfsi+0x24>
    11fa:	ba 95       	dec	r27
    11fc:	c9 f7       	brne	.-14     	; 0x11f0 <__fixunssfsi+0x14>
    11fe:	14 c0       	rjmp	.+40     	; 0x1228 <__fixunssfsi+0x4c>
    1200:	b1 30       	cpi	r27, 0x01	; 1
    1202:	91 f0       	breq	.+36     	; 0x1228 <__fixunssfsi+0x4c>
    1204:	0e 94 c8 09 	call	0x1390	; 0x1390 <__fp_zero>
    1208:	b1 e0       	ldi	r27, 0x01	; 1
    120a:	08 95       	ret
    120c:	0c 94 c8 09 	jmp	0x1390	; 0x1390 <__fp_zero>
    1210:	67 2f       	mov	r22, r23
    1212:	78 2f       	mov	r23, r24
    1214:	88 27       	eor	r24, r24
    1216:	b8 5f       	subi	r27, 0xF8	; 248
    1218:	39 f0       	breq	.+14     	; 0x1228 <__fixunssfsi+0x4c>
    121a:	b9 3f       	cpi	r27, 0xF9	; 249
    121c:	cc f3       	brlt	.-14     	; 0x1210 <__fixunssfsi+0x34>
    121e:	86 95       	lsr	r24
    1220:	77 95       	ror	r23
    1222:	67 95       	ror	r22
    1224:	b3 95       	inc	r27
    1226:	d9 f7       	brne	.-10     	; 0x121e <__fixunssfsi+0x42>
    1228:	3e f4       	brtc	.+14     	; 0x1238 <__fixunssfsi+0x5c>
    122a:	90 95       	com	r25
    122c:	80 95       	com	r24
    122e:	70 95       	com	r23
    1230:	61 95       	neg	r22
    1232:	7f 4f       	sbci	r23, 0xFF	; 255
    1234:	8f 4f       	sbci	r24, 0xFF	; 255
    1236:	9f 4f       	sbci	r25, 0xFF	; 255
    1238:	08 95       	ret

0000123a <__floatunsisf>:
    123a:	e8 94       	clt
    123c:	09 c0       	rjmp	.+18     	; 0x1250 <__floatsisf+0x12>

0000123e <__floatsisf>:
    123e:	97 fb       	bst	r25, 7
    1240:	3e f4       	brtc	.+14     	; 0x1250 <__floatsisf+0x12>
    1242:	90 95       	com	r25
    1244:	80 95       	com	r24
    1246:	70 95       	com	r23
    1248:	61 95       	neg	r22
    124a:	7f 4f       	sbci	r23, 0xFF	; 255
    124c:	8f 4f       	sbci	r24, 0xFF	; 255
    124e:	9f 4f       	sbci	r25, 0xFF	; 255
    1250:	99 23       	and	r25, r25
    1252:	a9 f0       	breq	.+42     	; 0x127e <__floatsisf+0x40>
    1254:	f9 2f       	mov	r31, r25
    1256:	96 e9       	ldi	r25, 0x96	; 150
    1258:	bb 27       	eor	r27, r27
    125a:	93 95       	inc	r25
    125c:	f6 95       	lsr	r31
    125e:	87 95       	ror	r24
    1260:	77 95       	ror	r23
    1262:	67 95       	ror	r22
    1264:	b7 95       	ror	r27
    1266:	f1 11       	cpse	r31, r1
    1268:	f8 cf       	rjmp	.-16     	; 0x125a <__floatsisf+0x1c>
    126a:	fa f4       	brpl	.+62     	; 0x12aa <__floatsisf+0x6c>
    126c:	bb 0f       	add	r27, r27
    126e:	11 f4       	brne	.+4      	; 0x1274 <__floatsisf+0x36>
    1270:	60 ff       	sbrs	r22, 0
    1272:	1b c0       	rjmp	.+54     	; 0x12aa <__floatsisf+0x6c>
    1274:	6f 5f       	subi	r22, 0xFF	; 255
    1276:	7f 4f       	sbci	r23, 0xFF	; 255
    1278:	8f 4f       	sbci	r24, 0xFF	; 255
    127a:	9f 4f       	sbci	r25, 0xFF	; 255
    127c:	16 c0       	rjmp	.+44     	; 0x12aa <__floatsisf+0x6c>
    127e:	88 23       	and	r24, r24
    1280:	11 f0       	breq	.+4      	; 0x1286 <__floatsisf+0x48>
    1282:	96 e9       	ldi	r25, 0x96	; 150
    1284:	11 c0       	rjmp	.+34     	; 0x12a8 <__floatsisf+0x6a>
    1286:	77 23       	and	r23, r23
    1288:	21 f0       	breq	.+8      	; 0x1292 <__floatsisf+0x54>
    128a:	9e e8       	ldi	r25, 0x8E	; 142
    128c:	87 2f       	mov	r24, r23
    128e:	76 2f       	mov	r23, r22
    1290:	05 c0       	rjmp	.+10     	; 0x129c <__floatsisf+0x5e>
    1292:	66 23       	and	r22, r22
    1294:	71 f0       	breq	.+28     	; 0x12b2 <__floatsisf+0x74>
    1296:	96 e8       	ldi	r25, 0x86	; 134
    1298:	86 2f       	mov	r24, r22
    129a:	70 e0       	ldi	r23, 0x00	; 0
    129c:	60 e0       	ldi	r22, 0x00	; 0
    129e:	2a f0       	brmi	.+10     	; 0x12aa <__floatsisf+0x6c>
    12a0:	9a 95       	dec	r25
    12a2:	66 0f       	add	r22, r22
    12a4:	77 1f       	adc	r23, r23
    12a6:	88 1f       	adc	r24, r24
    12a8:	da f7       	brpl	.-10     	; 0x12a0 <__floatsisf+0x62>
    12aa:	88 0f       	add	r24, r24
    12ac:	96 95       	lsr	r25
    12ae:	87 95       	ror	r24
    12b0:	97 f9       	bld	r25, 7
    12b2:	08 95       	ret

000012b4 <__fp_cmp>:
    12b4:	99 0f       	add	r25, r25
    12b6:	00 08       	sbc	r0, r0
    12b8:	55 0f       	add	r21, r21
    12ba:	aa 0b       	sbc	r26, r26
    12bc:	e0 e8       	ldi	r30, 0x80	; 128
    12be:	fe ef       	ldi	r31, 0xFE	; 254
    12c0:	16 16       	cp	r1, r22
    12c2:	17 06       	cpc	r1, r23
    12c4:	e8 07       	cpc	r30, r24
    12c6:	f9 07       	cpc	r31, r25
    12c8:	c0 f0       	brcs	.+48     	; 0x12fa <__fp_cmp+0x46>
    12ca:	12 16       	cp	r1, r18
    12cc:	13 06       	cpc	r1, r19
    12ce:	e4 07       	cpc	r30, r20
    12d0:	f5 07       	cpc	r31, r21
    12d2:	98 f0       	brcs	.+38     	; 0x12fa <__fp_cmp+0x46>
    12d4:	62 1b       	sub	r22, r18
    12d6:	73 0b       	sbc	r23, r19
    12d8:	84 0b       	sbc	r24, r20
    12da:	95 0b       	sbc	r25, r21
    12dc:	39 f4       	brne	.+14     	; 0x12ec <__fp_cmp+0x38>
    12de:	0a 26       	eor	r0, r26
    12e0:	61 f0       	breq	.+24     	; 0x12fa <__fp_cmp+0x46>
    12e2:	23 2b       	or	r18, r19
    12e4:	24 2b       	or	r18, r20
    12e6:	25 2b       	or	r18, r21
    12e8:	21 f4       	brne	.+8      	; 0x12f2 <__fp_cmp+0x3e>
    12ea:	08 95       	ret
    12ec:	0a 26       	eor	r0, r26
    12ee:	09 f4       	brne	.+2      	; 0x12f2 <__fp_cmp+0x3e>
    12f0:	a1 40       	sbci	r26, 0x01	; 1
    12f2:	a6 95       	lsr	r26
    12f4:	8f ef       	ldi	r24, 0xFF	; 255
    12f6:	81 1d       	adc	r24, r1
    12f8:	81 1d       	adc	r24, r1
    12fa:	08 95       	ret

000012fc <__fp_inf>:
    12fc:	97 f9       	bld	r25, 7
    12fe:	9f 67       	ori	r25, 0x7F	; 127
    1300:	80 e8       	ldi	r24, 0x80	; 128
    1302:	70 e0       	ldi	r23, 0x00	; 0
    1304:	60 e0       	ldi	r22, 0x00	; 0
    1306:	08 95       	ret

00001308 <__fp_nan>:
    1308:	9f ef       	ldi	r25, 0xFF	; 255
    130a:	80 ec       	ldi	r24, 0xC0	; 192
    130c:	08 95       	ret

0000130e <__fp_pscA>:
    130e:	00 24       	eor	r0, r0
    1310:	0a 94       	dec	r0
    1312:	16 16       	cp	r1, r22
    1314:	17 06       	cpc	r1, r23
    1316:	18 06       	cpc	r1, r24
    1318:	09 06       	cpc	r0, r25
    131a:	08 95       	ret

0000131c <__fp_pscB>:
    131c:	00 24       	eor	r0, r0
    131e:	0a 94       	dec	r0
    1320:	12 16       	cp	r1, r18
    1322:	13 06       	cpc	r1, r19
    1324:	14 06       	cpc	r1, r20
    1326:	05 06       	cpc	r0, r21
    1328:	08 95       	ret

0000132a <__fp_round>:
    132a:	09 2e       	mov	r0, r25
    132c:	03 94       	inc	r0
    132e:	00 0c       	add	r0, r0
    1330:	11 f4       	brne	.+4      	; 0x1336 <__fp_round+0xc>
    1332:	88 23       	and	r24, r24
    1334:	52 f0       	brmi	.+20     	; 0x134a <__fp_round+0x20>
    1336:	bb 0f       	add	r27, r27
    1338:	40 f4       	brcc	.+16     	; 0x134a <__fp_round+0x20>
    133a:	bf 2b       	or	r27, r31
    133c:	11 f4       	brne	.+4      	; 0x1342 <__fp_round+0x18>
    133e:	60 ff       	sbrs	r22, 0
    1340:	04 c0       	rjmp	.+8      	; 0x134a <__fp_round+0x20>
    1342:	6f 5f       	subi	r22, 0xFF	; 255
    1344:	7f 4f       	sbci	r23, 0xFF	; 255
    1346:	8f 4f       	sbci	r24, 0xFF	; 255
    1348:	9f 4f       	sbci	r25, 0xFF	; 255
    134a:	08 95       	ret

0000134c <__fp_split3>:
    134c:	57 fd       	sbrc	r21, 7
    134e:	90 58       	subi	r25, 0x80	; 128
    1350:	44 0f       	add	r20, r20
    1352:	55 1f       	adc	r21, r21
    1354:	59 f0       	breq	.+22     	; 0x136c <__fp_splitA+0x10>
    1356:	5f 3f       	cpi	r21, 0xFF	; 255
    1358:	71 f0       	breq	.+28     	; 0x1376 <__fp_splitA+0x1a>
    135a:	47 95       	ror	r20

0000135c <__fp_splitA>:
    135c:	88 0f       	add	r24, r24
    135e:	97 fb       	bst	r25, 7
    1360:	99 1f       	adc	r25, r25
    1362:	61 f0       	breq	.+24     	; 0x137c <__fp_splitA+0x20>
    1364:	9f 3f       	cpi	r25, 0xFF	; 255
    1366:	79 f0       	breq	.+30     	; 0x1386 <__fp_splitA+0x2a>
    1368:	87 95       	ror	r24
    136a:	08 95       	ret
    136c:	12 16       	cp	r1, r18
    136e:	13 06       	cpc	r1, r19
    1370:	14 06       	cpc	r1, r20
    1372:	55 1f       	adc	r21, r21
    1374:	f2 cf       	rjmp	.-28     	; 0x135a <__fp_split3+0xe>
    1376:	46 95       	lsr	r20
    1378:	f1 df       	rcall	.-30     	; 0x135c <__fp_splitA>
    137a:	08 c0       	rjmp	.+16     	; 0x138c <__fp_splitA+0x30>
    137c:	16 16       	cp	r1, r22
    137e:	17 06       	cpc	r1, r23
    1380:	18 06       	cpc	r1, r24
    1382:	99 1f       	adc	r25, r25
    1384:	f1 cf       	rjmp	.-30     	; 0x1368 <__fp_splitA+0xc>
    1386:	86 95       	lsr	r24
    1388:	71 05       	cpc	r23, r1
    138a:	61 05       	cpc	r22, r1
    138c:	08 94       	sec
    138e:	08 95       	ret

00001390 <__fp_zero>:
    1390:	e8 94       	clt

00001392 <__fp_szero>:
    1392:	bb 27       	eor	r27, r27
    1394:	66 27       	eor	r22, r22
    1396:	77 27       	eor	r23, r23
    1398:	cb 01       	movw	r24, r22
    139a:	97 f9       	bld	r25, 7
    139c:	08 95       	ret

0000139e <__divmodsi4>:
    139e:	05 2e       	mov	r0, r21
    13a0:	97 fb       	bst	r25, 7
    13a2:	1e f4       	brtc	.+6      	; 0x13aa <__divmodsi4+0xc>
    13a4:	00 94       	com	r0
    13a6:	0e 94 e6 09 	call	0x13cc	; 0x13cc <__negsi2>
    13aa:	57 fd       	sbrc	r21, 7
    13ac:	07 d0       	rcall	.+14     	; 0x13bc <__divmodsi4_neg2>
    13ae:	0e 94 fd 09 	call	0x13fa	; 0x13fa <__udivmodsi4>
    13b2:	07 fc       	sbrc	r0, 7
    13b4:	03 d0       	rcall	.+6      	; 0x13bc <__divmodsi4_neg2>
    13b6:	4e f4       	brtc	.+18     	; 0x13ca <__divmodsi4_exit>
    13b8:	0c 94 e6 09 	jmp	0x13cc	; 0x13cc <__negsi2>

000013bc <__divmodsi4_neg2>:
    13bc:	50 95       	com	r21
    13be:	40 95       	com	r20
    13c0:	30 95       	com	r19
    13c2:	21 95       	neg	r18
    13c4:	3f 4f       	sbci	r19, 0xFF	; 255
    13c6:	4f 4f       	sbci	r20, 0xFF	; 255
    13c8:	5f 4f       	sbci	r21, 0xFF	; 255

000013ca <__divmodsi4_exit>:
    13ca:	08 95       	ret

000013cc <__negsi2>:
    13cc:	90 95       	com	r25
    13ce:	80 95       	com	r24
    13d0:	70 95       	com	r23
    13d2:	61 95       	neg	r22
    13d4:	7f 4f       	sbci	r23, 0xFF	; 255
    13d6:	8f 4f       	sbci	r24, 0xFF	; 255
    13d8:	9f 4f       	sbci	r25, 0xFF	; 255
    13da:	08 95       	ret

000013dc <__umulhisi3>:
    13dc:	a2 9f       	mul	r26, r18
    13de:	b0 01       	movw	r22, r0
    13e0:	b3 9f       	mul	r27, r19
    13e2:	c0 01       	movw	r24, r0
    13e4:	a3 9f       	mul	r26, r19
    13e6:	70 0d       	add	r23, r0
    13e8:	81 1d       	adc	r24, r1
    13ea:	11 24       	eor	r1, r1
    13ec:	91 1d       	adc	r25, r1
    13ee:	b2 9f       	mul	r27, r18
    13f0:	70 0d       	add	r23, r0
    13f2:	81 1d       	adc	r24, r1
    13f4:	11 24       	eor	r1, r1
    13f6:	91 1d       	adc	r25, r1
    13f8:	08 95       	ret

000013fa <__udivmodsi4>:
    13fa:	a1 e2       	ldi	r26, 0x21	; 33
    13fc:	1a 2e       	mov	r1, r26
    13fe:	aa 1b       	sub	r26, r26
    1400:	bb 1b       	sub	r27, r27
    1402:	fd 01       	movw	r30, r26
    1404:	0d c0       	rjmp	.+26     	; 0x1420 <__udivmodsi4_ep>

00001406 <__udivmodsi4_loop>:
    1406:	aa 1f       	adc	r26, r26
    1408:	bb 1f       	adc	r27, r27
    140a:	ee 1f       	adc	r30, r30
    140c:	ff 1f       	adc	r31, r31
    140e:	a2 17       	cp	r26, r18
    1410:	b3 07       	cpc	r27, r19
    1412:	e4 07       	cpc	r30, r20
    1414:	f5 07       	cpc	r31, r21
    1416:	20 f0       	brcs	.+8      	; 0x1420 <__udivmodsi4_ep>
    1418:	a2 1b       	sub	r26, r18
    141a:	b3 0b       	sbc	r27, r19
    141c:	e4 0b       	sbc	r30, r20
    141e:	f5 0b       	sbc	r31, r21

00001420 <__udivmodsi4_ep>:
    1420:	66 1f       	adc	r22, r22
    1422:	77 1f       	adc	r23, r23
    1424:	88 1f       	adc	r24, r24
    1426:	99 1f       	adc	r25, r25
    1428:	1a 94       	dec	r1
    142a:	69 f7       	brne	.-38     	; 0x1406 <__udivmodsi4_loop>
    142c:	60 95       	com	r22
    142e:	70 95       	com	r23
    1430:	80 95       	com	r24
    1432:	90 95       	com	r25
    1434:	9b 01       	movw	r18, r22
    1436:	ac 01       	movw	r20, r24
    1438:	bd 01       	movw	r22, r26
    143a:	cf 01       	movw	r24, r30
    143c:	08 95       	ret

0000143e <strcmp>:
    143e:	fb 01       	movw	r30, r22
    1440:	dc 01       	movw	r26, r24
    1442:	8d 91       	ld	r24, X+
    1444:	01 90       	ld	r0, Z+
    1446:	80 19       	sub	r24, r0
    1448:	01 10       	cpse	r0, r1
    144a:	d9 f3       	breq	.-10     	; 0x1442 <strcmp+0x4>
    144c:	99 0b       	sbc	r25, r25
    144e:	08 95       	ret

00001450 <_exit>:
    1450:	f8 94       	cli

00001452 <__stop_program>:
    1452:	ff cf       	rjmp	.-2      	; 0x1452 <__stop_program>
